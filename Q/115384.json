{"scores":{"Spring '14":{"course_score":{"overall":"3.10","workload":"4.40","difficulty":"4.50","recommendation":"3.30","enrollment":"147","response rate":"71.43","QCourseOverall":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"16","2s":"18","3s":"24","4s":"23","5s":"19"},"QDifficulty":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"8","4s":"31","5s":"61"},"QWorkload":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"13","4s":"31","5s":"56"}},"instructor_scores":[{"number":"COMPSCI 124","cat_num":"5207","course_id":"1231","year":"2013","term":"2","id":"2b1aa692e853a5d6b4059d87f5626178","first":" Jelani","last":"Nelson","InstructorOverall":"3.40","EffectiveLecturesorPresentations":"3.70","AccessibleOutsideClass":"3.70","GeneratesEnthusiasm":"3.50","FacilitatesDiscussionEncouragesParticipation":"3.40","GivesUsefulFeedback":"2.60","ReturnsAssignmentsinTimelyFashion":"3.40"}]},"Spring '13":{"course_score":{"overall":"4.04","workload":"3.63","difficulty":"4.21","recommendation":"4.15","enrollment":"99","response rate":"93.94","QCourseOverall":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"16","2s":"18","3s":"24","4s":"23","5s":"19"},"QDifficulty":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"8","4s":"31","5s":"61"},"QWorkload":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"13","4s":"31","5s":"56"}},"instructor_scores":[{"number":"COMPSCI 124","cat_num":"5207","course_id":"1231","year":"2012","term":"2","id":"df98ae395fa9bc5f55668e19a773f4a2","first":" Michael","last":"Mitzenmacher","InstructorOverall":"4.08","EffectiveLecturesorPresentations":"4.24","AccessibleOutsideClass":"3.59","GeneratesEnthusiasm":"3.81","FacilitatesDiscussionEncouragesParticipation":"3.61","GivesUsefulFeedback":"3.35","ReturnsAssignmentsinTimelyFashion":"2.62"}]},"Spring '12":{"course_score":{"overall":"3.61","workload":"3.64","difficulty":"4.28","recommendation":"3.81","enrollment":"110","response rate":"88.18","QCourseOverall":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"16","2s":"18","3s":"24","4s":"23","5s":"19"},"QDifficulty":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"8","4s":"31","5s":"61"},"QWorkload":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"13","4s":"31","5s":"56"}},"instructor_scores":[{"number":"COMPSCI 124","cat_num":"5207","course_id":"1231","year":"2011","term":"2","id":"df98ae395fa9bc5f55668e19a773f4a2","first":"Michael","last":"Mitzenmacher","InstructorOverall":"3.42","EffectiveLecturesorPresentations":"3.76","AccessibleOutsideClass":"2.97","GeneratesEnthusiasm":"3.32","FacilitatesDiscussionEncouragesParticipation":"3.57","GivesUsefulFeedback":"2.52","ReturnsAssignmentsinTimelyFashion":"2.24"}]},"Spring '11":{"course_score":{"overall":"3.87","workload":"3.79","difficulty":"4.11","recommendation":"3.85","enrollment":"53","response rate":"88.68","QCourseOverall":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"16","2s":"18","3s":"24","4s":"23","5s":"19"},"QDifficulty":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"8","4s":"31","5s":"61"},"QWorkload":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"13","4s":"31","5s":"56"}},"instructor_scores":[{"number":"COMPSCI 124","cat_num":"5207","course_id":"1231","year":"2010","term":"2","id":"df98ae395fa9bc5f55668e19a773f4a2","first":"Michael","last":"Mitzenmacher","InstructorOverall":"3.66","EffectiveLecturesorPresentations":"3.96","AccessibleOutsideClass":"3.24","GeneratesEnthusiasm":"3.57","FacilitatesDiscussionEncouragesParticipation":"3.93","GivesUsefulFeedback":"3.57","ReturnsAssignmentsinTimelyFashion":"3.59"}]},"Spring '10":{"course_score":{"overall":"3.41","workload":"3.83","difficulty":"4.41","recommendation":"3.37","enrollment":"48","response rate":"87.50","QCourseOverall":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"16","2s":"18","3s":"24","4s":"23","5s":"19"},"QDifficulty":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"8","4s":"31","5s":"61"},"QWorkload":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"13","4s":"31","5s":"56"}},"instructor_scores":[{"number":"COMPSCI 124","cat_num":"5207","course_id":"1231","year":"2009","term":"2","id":"df98ae395fa9bc5f55668e19a773f4a2","first":"Michael","last":"Mitzenmacher","InstructorOverall":"3.26","EffectiveLecturesorPresentations":"3.56","AccessibleOutsideClass":"2.83","GeneratesEnthusiasm":"3.11","FacilitatesDiscussionEncouragesParticipation":"3.16","GivesUsefulFeedback":"2.87","ReturnsAssignmentsinTimelyFashion":"3.06"}]},"Spring '09":{"course_score":{"overall":"3.35","workload":"3.73","difficulty":"4.24","recommendation":"3.33","enrollment":"80","response rate":"77.50","QCourseOverall":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"16","2s":"18","3s":"24","4s":"23","5s":"19"},"QDifficulty":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"8","4s":"31","5s":"61"},"QWorkload":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"13","4s":"31","5s":"56"}},"instructor_scores":[{"number":"COMPSCI 124","cat_num":"5207","course_id":"1231","year":"2008","term":"2","id":"df98ae395fa9bc5f55668e19a773f4a2","first":"Michael","last":"Mitzenmacher","InstructorOverall":"3.29","EffectiveLecturesorPresentations":"3.57","AccessibleOutsideClass":"2.98","GeneratesEnthusiasm":"3.03","FacilitatesDiscussionEncouragesParticipation":"3.05","GivesUsefulFeedback":"2.19","ReturnsAssignmentsinTimelyFashion":"3.04"}]},"Spring '08":{"course_score":{"overall":"4.22","workload":"3.38","difficulty":"3.62","recommendation":"4.21","enrollment":"36","response rate":"66.67","QCourseOverall":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"16","2s":"18","3s":"24","4s":"23","5s":"19"},"QDifficulty":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"8","4s":"31","5s":"61"},"QWorkload":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"13","4s":"31","5s":"56"}},"instructor_scores":[{"number":"COMPSCI 124","cat_num":"5207","course_id":"1231","year":"2007","term":"2","id":"df98ae395fa9bc5f55668e19a773f4a2","first":"Michael","last":"Mitzenmacher","InstructorOverall":"3.92","EffectiveLecturesorPresentations":"4.39","AccessibleOutsideClass":"3.20","GeneratesEnthusiasm":"3.67","FacilitatesDiscussionEncouragesParticipation":"3.67","GivesUsefulFeedback":"2.38","ReturnsAssignmentsinTimelyFashion":"3.56"}]},"Spring '07":{"course_score":{"overall":"3.81","workload":"3.21","difficulty":"3.74","recommendation":"3.63","enrollment":"35","response rate":"60.00","QCourseOverall":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"16","2s":"18","3s":"24","4s":"23","5s":"19"},"QDifficulty":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"8","4s":"31","5s":"61"},"QWorkload":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"13","4s":"31","5s":"56"}},"instructor_scores":[{"number":"COMPSCI 124","cat_num":"5207","course_id":"1231","year":"2006","term":"2","id":"df98ae395fa9bc5f55668e19a773f4a2","first":"Michael","last":"Mitzenmacher","InstructorOverall":"3.53","EffectiveLecturesorPresentations":"3.89","AccessibleOutsideClass":"2.69","GeneratesEnthusiasm":"3.47","FacilitatesDiscussionEncouragesParticipation":"3.57","GivesUsefulFeedback":"2.15","ReturnsAssignmentsinTimelyFashion":"3.15"}]}},"comments":{"Spring '08":{"comments":["Solid class that teaches you a lot. CS concentrators should really take this class over a math class for their theory requirement.","Leave your ego at the door: if you throw something stupid out, Mitzenmacher *will* let you know it was stupid. This is a good thing, though. Of course, if you throw something smart out, he'll let you know that too.","Many of the most valuable aspects of this course -- particularly an understanding of algorithmic caterogies and techniques -- could have been gleaned by referring to a good textbook or any of dozens of web sites devoted to algorithm topics.  While this material was generally well presented in class, the pace of lectures was too slow and the lack of feedback from the course staff was frustrating.","This class is extremely interesting and important.  It covers a wide variety of topics in the field of algorithms, and teaches many approaches to problem solving and efficiency.  It is challenging but fun.","Ask for help when you need it. Take the class with friends, if possible. Take notes in lecture. Be strong.","It's a great class and well worth taking, but be prepared to work hard.","It is a very structured and fairly well-taught course, and it covers some specific topics that probably are not covered in a typical introductory algorithms course.","It is a tough class that a CS major must take. The course teaches you a practical approach to algorithmic problems.","Be prepared for a lot of intensive thinking.","very difficult","know how to program well before the class","Wikipedia is your friend for filling in any holes in the fast-paced lectures.  The lecture notes are also very helpful, when they are posted.  Be prepared for long nights and some frustration, particularly if you are more of an engineer.","Definitely the course I have enjoyed and gotten the most out of at Harvard despite the rather large workload.","Be prepared to spend a lot of time on - but enjoy - the problem sets. Also, be prepared to do terribly on the exams, which are much too difficult and contain too many problems for the time allotted. And don't expect anything from the professor outside of his reading the lectures."]},"Spring '09":{"comments":["It's really, really hard and time-consuming.","Take this course only if you have to as your concentration requirement, and not without considering your other non-CS options as well.","It's difficult","The course is necessary for anybody who is seriously interested in computer science. The downside of this class is its professor, Michael Mitzenmacher. The extent to which Professor Mitzenmacher does not care about this course is unsettling and almost insulting. He has not changed the lecture notes since 2001 and refuses to post solutions to any problem sets or exam problems. His genuine unconcern of students in the course makes it difficult to learn the material he teaches effectively.","For the student that desires to learn quite a lot about algorithm design and is willing to work hard, I would recommend this class fully.  You can get a lot out of it, but it is not for the faint of heart.","The material is great. The TFs are great. The professor is very knowledgable, but seems not to care if you actually learn anything.","It's very theoretical, not very useful, very difficult, and the professor is not a good lecturer","This course gives a very broad introduction to many important algorithms in computer science, and will give you a very good foundation for more advanced classes.","Despite the abysmal nature of this class, I must recommend it to all computer science students. Data structures and algorithms are the bread and butter of CS, and there isn't really anywhere else to get said bread and butter. Unfortunately, the class is frustrating, and focuses on some irrelevant topics. The pain will only make you stronger.","Take it only if you have a thorough understanding of the subjects that I listed and if you want to learn to invent new algorithms.","This is a very good introduction to being able to design efficient algorithms.","Very good class, but very time consuming and difficult.","The content is cool, but the tests are difficult. I felt way more pressured on the test than on Math 25 tests.","The content of the course is very good to know, but the course is very challenging and takes a lot of time, especially the problem sets. One needs to take other time-consuming activities into account before deciding whether or not to take the course.","Find another way to meet the CS theory requirement.  If you don't have to take this for the theory requirement, you'd be crazy to take it.","It's difficult, but you learn a lot in quite a bit depth.","Be prepared to work your butt off!","The few.  The proud.","Very interesting material but extremely challenging.  Math background is important.","It's a good way to fill your \"2 as middle digit\" requirement. Everything we learned was applicable, but was sometimes difficult to understand.","good course, but not very transparent with secretive exams","I think the class is extremely important if you have any plans toward more CS","Great material, poorly structured due to lack of practice problems and general lack of consideration for the students","Avoid it if you can.","Great class with great material. Be prepared to work hard.","Not a difficult course, but time consuming.","This is one of the hardest but most rewarding classes you might take in Computer Science at Harvard. The class will steal from you your sleep, your ego, and your GPA, but will give you an amazing set of algorithmic tools, a great theoretical computer science background, and a level of confidence when facing difficult problems.","A lot of work, grading is tough, but interesting material and learned quite a bit.","I thought this class did a good job of connecting the theory to some neat real examples.","Take it if you really like math or have experience with algorithms already...or because it's required","Barring a particular interest in math, computer science, and proofs and a natural talent for the same, I would avoid this course at all costs. Those seeking to fulfill a requirement should heavily consider alternative offerings.","Beware...","It's useful to learn the algorithms and to learn how to think about solving CS problems, but it could be much more enthusiastically taught and the material could be more relevant and less \"stuff Mitzenmacher liked when he put the lecture notes together in 1998 and 2002 and hasn't change since.\"","I would seriously suggest looking at the other Applied Math courses available for CS students to fulfill their Computer Theory requirements. I really did not enjoy this class - this was probably one of my least favorite courses of college.","The course can be very interesting if you like both math and computer science, but hard core computer scientists might find it to be different from the usual department classes.","The course can be toilsome work at times, but is effective in teaching a wa of thinking.","Professor Mitzenmacher seems to be bored by the course material after so many years of teaching the same class, but his notes are clear and the material is important and interesting. Taking this class is like eating your Computer Science broccoli.","A lot of hard work and late nights \/ early mornings, sometimes there is so much work you skip class just to sleep after a problem set, but it's really rewarding at the end.","you will not do well on the midterm and final. just focus on doing well on problem sets and programming assignments.\r\nyou learn a lot and become smarter taking this class, but it's hard stuff.","Very difficult. Very rewarding. Quintessential cs class.","It's interesting and a good class to have taken, but it's a painful process."]},"Spring '10":{"comments":["Do not take this class for credit if you don't have to.  AUDIT ONLY!  The lectures are great; the grading system is awful.","It's difficult, but the concepts taught are invaluable to a computer scientist.","Consider taking AM 107 VERY SERIOUSLY.","If you're a CS concentrator, you need to take this. A lot of the stuff you learn is important. That said, the journey will not be pleasant. If you're not a CS concentrator, and are looking for something light and fun, you should reconsider.","The course is difficult and takes up a good amount of time. I think you get most out of the class with the more cs theory, math, and probability background.","CS 124 is a must take for anyone interested in the field of computer science. However do not expect this to be a simple intro course; it can be challenging at times.","Not as bad as I thought it would be","CS124 is difficult in a wonderful way. You will learn a lot, stay up until 4 am, and make great friends. Mitzenmacher is awesome. The TFs aren't that helpful though, unless he hires someone besides awkward nerdy guys next year. Take it especially to prepare for quantitative interviews. The lecture notes are great. Exams and assignments are pretty fun. Don't do it during internship or job recruiting like I did. I wish I had more time to devote to this course.","Do not take the class, you'll regret it.  You'll learn some useful stuff, but it's just not worth it. How little Mitzenmacher cares about the class is insulting. Not giving out solutions to problem sets and the midterm is not acceptable, and seriously hinders learning the material.","It's hard.","This course probably isn't necessary to proceed within the department and it doesn't teach you facts that you can't learn in a week with CLRS but it is an awesome experience in CS intuition-building. Probably the most mentally intensive of the intro (non-specialized) courses it'll force you to sharpen your mind on the kind of problems that you'll likely be grappling with in the future. Thus it's a great course for concentrators and non-concentrators alike, assuming you can pull off the mental gymnastics that will sometimes be necessary to get through the course's tricky problems.","It's really, really hard, but it's really really worth it.","The subject matter is fascinating, but poorly taught. Assignments and tests are fiendishly difficult. If you can avoid taking this class in favor of either learning the material yourself or taking an alternative course, do it.","A challenging but rewarding class that I think all CS majors should be required to take.","Exams are absolute bitches.  problem sets are pretty fucking hard too.  don't expect a high grade, but the material is awesome.  and mitzenmacher is a genius, although intimidating.","The only reason you ever have to take this class is if you really really like difficult math proofs. Prepare for a horrible semester (if Mitzenmacher is teaching it).","Overall a good experience, the course offers up a wide variety of interesting content. Expect to do a lot of work.","Only take it if you need it for a requirement or if you're somehow in love with algorithms.","Material is very interesting and useful!","This class has interesting material, and the teaching is actually pretty good.  But the assignments, feedback, and grading are horrendous.  Problem sets answers are NEVER posted and you will get at most 1 line of feedback on a problem done wrong, which usually isn't enough.  Programming assignments have ambiguities and take forever; the lack of a rubric or consistent point system makes it hard to optimize for limited time.","Be prepared to do a lot of work.  Although it can be stressful at times, you do learn a lot.","This course takes a lot of time and is quite difficult, but you do learn a lot.","This course will work you.  One problem with it is that it can work you but still not actually teach you anything, if you're not careful.  But it doesn't have to be that way -- don't believe someone who tells you otherwise.  The course simply requires you to take initiative in order to learn.  You have to try to understand material yourself, and if you don't, you have to seek out the course staff for help.  I think the difference here compared to other courses is that you can't expect lecture to give you a complete mental model of the material.  The lectures present the material, and then you need to attempt yourself to build a mental model of it, and ask for help as required.\r\n\r\nThat said, you want this course.  You need this course.  Even if Harvard will let you, don't try graduating with a CS degree without taking a real introduction to algorithms -- CS 124.","A knowledge of algorithms and data structures is vital for every computer science concentrator. However, this course takes a much more abstract\/theoretical\/mathematical viewpoint than most CS courses, and will be difficult for the average CS concentrator without a very strong mathematical background.","The material is excellent, as are the tests and assignments.  Mitzenmacher also provides great lecture notes, so going to class is not necessary.","If you enjoy theory, do it.","This is the hardest class I have ever taken and probably will ever take.  It is also the most interesting.  I honestly wish I could say that I learned all of the material better, but the class is not taught as effectively as it could be.  Don't expect written feedback on your assignments. DO expect to spend >15 or 20 hours on assignments.  All-nighters are common. Be ready for this class and put in all the time it needs.  If you are willing to do the work, take the class. You'll come out much better.","This is a great way to begin learning algorithms. It really does spark curiosity.","Painful but useful (hopefully)."]},"Spring '11":{"comments":["CS124 is a challenging and thought-provoking introduction to a wide variety of algorithms. Mitzenmacher is a fairly effective lecturer, while the problem sets and programming assignments are difficult yet well-worth the effort. However, the class is at times plagued by structural issues: feedback is scant or nonexistent, answers to assignments are never posted, very little supplementary review material is provided. I would certainly recommend the course, though, especially to the mathematically-minded.","definitely take the time to learn and practice the material","The problem sets are cruel.  The professor doesn't seem to care much about his students, unless they're the top 1% of the class.  But, this is a good way to learn the real \"meat and potatoes\" of CS \u00e2\u20ac\u201ddon't shirk out of the requirement by taking an applied math course!  Though it was painful, and I am not very math-inclined, I feel like I learned a TON, and you simply can't call yourself a real CS person if you don't have this background.","this is 2\/3 math, 1\/3 cs. certainly take it if you'd like something that, avoid it if you wouldn't.","Man up and take CS124.","this class is hard. you will not get an A. There is a midterm and problem set on the same day. Do not have a hard set of classes to complement this, you won't like yourself very much if you do.","Only take if you are serious about learning CS, not for most interested in a secondary.","The course is great and it gives you a great background in algorithms. The course overall is very well structured but it seems that the professor is not enthusiastic about the material anymore...","Mitzenmacher can seem a little uninterested in students (placing the midterm on housing day for example), but based on how much he invests in the problem sets, exams, and programming assignments I think he might be one of the most engaged professors I've had. \r\n\r\nIf you are academically interested in the materials (as in- I want to know how this works) give this shot a go because its really interesting and changes how your mind works. The students who took this course just to have it on their record, say for job prospects, I think they struggle a lot more. You need to really like thinking about the details of what you are doing. If you really hate asking questions like \"does this argument prove what I want to prove,\" don't take this course.","CS124 is a solid class.  While lectures seem to start off shaky, their quality increases as time goes on and the class begins to delve into the meat of the material covered, which, overall, seems fairly substantial and teaches good intuition for algorithm design and, more generally, approaching new problems.  Problem sets and exams are all well-written and contain interesting, if sometimes difficult or lengthy, problems; the psets themselves are somewhat time-consuming, but can frequently be done (as the course website mentions) with a clear-headed all-nighter (or, alternately, over the course of the week they're assigned).  Much better than 121.","Probably not the best thing to take as an elective because of the difficulty, but if you're really interested in the material, it's a good class.","It's not that hard if you study, and it's mostly about making sure you get your work done ahead of time.","Not as bad as everyone makes it out to be. Material is challenging and coursework is very time consuming, but its manageable. Just be sure that you have some experience writing proofs before taking it.","It's a fun class. To the math majors: don't try to be too rigorous; it will take a lot of time and ultimately not be fulfilling.","The course material is incredibly important, so you really have to take this class. That said, it's frustrating at times because a lot of the course policies are unhelpful. The solutions to problem sets are not published. There are no old practice exams available to help prepare for the midterm or final - that's especially problematic because neither of the course textbooks line up precisely with the course, so it's difficult to find applicable practice problems. The exam questions are not overly hard - it's that there's not enough time to do them, making it more about how quickly you can figure it out.","The class covers a lot of algorithms and interesting periphery material, and gives you some good intuition for how to approach algorithm problems in general. Mitzenmacher's lecture style is insightful but he moves quickly and has a uniquely wonderful sense of humor. Be prepared for pretty tough exams and some hard problem sets.","A solid introduction to algorithms, but expect it to be quite tough if you haven't had algorithm or math experience.","It's been said before: this class is your \"CS broccoli.\" It's good for you, and you really ought to take it, but you probably won't enjoy it much. The material by itself isn't necessarily that difficult, but the problem sets and exams are extraordinarily challenging. If nothing else it'll help you with interviews. Don't take it if you care about your GPA.","Last year, I saw a lot of comments saying not to take this class. But, I really thought this class would be useful and worth all the effort. I have never been more wrong. The teaching staff is absolutely horrendous, the problem sets are impossibly difficult, and \"feedback\" consists of \"2\/10: you can do better\". This class simply was NOT worth it by any stretch of the imagination. It completely kicked my ass, killed by GPA, and I don't feel any sense of accomplishment. Unless you took Math 55 and impractical theory, go take a real CS class.","CS124 is one of the hardest classes here.  It (and CS51) are the two classes that are crucial to you becoming a computer scientist. Yes, it is ridiculously difficult, but it's also ridiculously worth it.","Definitely take this class! Algorithms are so crucial to having a good computer science education! The lecture notes in this class are very good, so it's easy to review material use them to study for the midterm and final. The psets and programming assignments do take some time (I would estimate around 8 hours or so), but they're good assignments! You will learn a good amount in this class and walk away feeling like a better computer science person.\r\n\r\nThis definitely sparked a huge interest for me in algorithms as well. They're actually really cool and exciting!","The material in this course is essential for CS majors. Let me repeat that: the material is ESSENTIAL. A CS major not knowing this stuff is like a math major not knowing calculus or an East Asian major graduating without fluency in any East Asian language. Not taking algorithms means your CS degree should be used as toilet paper and flushed down the toilet. AM 107 and AM 106 are not acceptable substitutes pedagogically. That said, this course does have many shortcomings including the lack of solutions to homework problems, no practice exams, horrible curve (mainly because of all the math majors in the class). If you are scared by B's, stay away from this class and honestly get out of the CS concentration altogether. If you work your tail off and\/or are anal about the problem sets, a B+ or A- is in the question. You will not get an A unless you are a genius --Math 55 level-- (and you're probably not), you were a TopCoder veteran (of which there were several in the course), and\/or you work so hard that you will have no life outside of this course. Note that the second requirement is in addition to being on the Math 23\/25 level. If you are below that, you're screwed no matter what aside from sacrificing your firstborn and moving into Cabot Science Library permanently.  The professor is a nice guy and a decent lecturer, but he does not care about you at all (selectively responds to emails, notes are ancient and riddled with typos, no real feedback on assignments). If you can, look into MIT's 6.046 algorithms course to learn the material in a course that's much better run. Another option would be to take this pass\/fail after you've finished your CS requirements to learn the stuff without getting too stressed out.","You must take this class if you have any interest in computer science. Whether it's for an interview or for common knowledge, algorithms are going to be necessary.","Take this class. This is one of few classes at Harvard that has truly shaped the way that I think about problems. The material is indispensible for anyone going into Computer Science or related problems, but definitely helpful for any quantitative field. Don't expect to have much guidance throughout - it's up to you, your friends, and the CLRT book. Good luck!","Mitzenmacher thinks he understands pedagogy very well, but he doesn't.  Also, his notes are more or less copied from an algorithms textbook from Berkeley.","Make sure you aren't taking 2 other difficult courses. This class is worth the extra time because you will learn a lot.","if you like interesting problems, take it. you don't need much (or any) cs experience at all; the problem sets and programming assignments are not bad, minimal coding, c is easy to learn and as long as you're conscientious won't be a challenge for you. you should hopefully be decent at math or problem-solving sort of thinking.","This is one of the most important classes you can take as a CS major. You're cheating yourself if you don't.","It's a pretty amazing class that presents a series of different problems and shows you wickedly clever and often non-intuitive answers. Also introduces some ideas I found very elegant. Definitely not a light class, but well worth it. Those of us who haven't done tons of math might struggle a tad at times.\r\nIf you take it, be prepared for the midterm to be extremely long, so manage your time very carefully (allot more time for the proofs).","It's fun, but hard (at least was for me).","What follows will probably be most helpful to non-computer science concentrators. I came into the course a bit skeptical, based on rumors and previous Q-guides. It definite exceeded my expectations. The lecturing was clear, if sometimes a bit slow-paced, and the materials were excellent. Lecture notes and section notes are given for each problem. I think the assignments are well-chosen, although personally I thought the programming assignments took too long and the problem sets could have been more challenging (but I don't come from a programming background). There wasn't much feedback, and it wasn't that prompt (except for the tests, which were graded VERY promptly. I got my final exam score back about 5 hours after I finished it.) I enjoyed the emphasis on problem-solving techniques and paradigms, but that may not be what you're looking for."]},"Spring '12":{"comments":["It's not a perfect class, and I hear MIT's version is much better. But if you're in CS, you'll take it either way; if you're in math or physics, you won't have that much trouble with it despite the negative points; so no harm, no foul.","THIS CLASS IS HARD. But it is well worth the information in it. Sure, you could probably learn all the material yourself; its not really very hard. But the problem sets and programming assignments are where the struggles lie, and the exams are ridiculously tough for most people. If you are CS, this is a must-take class for the future. Be prepared to work really hard and still do average\/poorly. TFs are somewhat helpful, mitz is terrible with timing the pset and midterm exams. You will hate this class and love the material at the same time.","The TFs really make or break the course. And luckily, there were some great TFs this year who were genuinely excited about helping the students. That said, I'd be likely to recommend this class merely on how important (and interesting) the material is.","Definitely the course that taught me the most this semester - I could actually feel myself getting better at algorithms. If you have a math background, don't be scared off by the complainers. You'll be fine. If you don't, it might help to take a proof-y math class first (CS 20, maybe?)","It seems to be more about general cleverness and problem solving ability than any specific computer science skills.","Don't be fooled by bad reports of this class. It's no-nonsense, yes, but that's why you learn this important material well! You'll be appreciative for this class later on in your career.","The choice between making a problem set due on the day of the midterm or making it due earlier is a false dichotomy that anyone attending Harvard should be too intelligent to fall for. This is just one example of the way the course staff enacts policies that antagonize students. It's a shame that such useful and interesting subject matter is coupled with such an environment.","Great course. Often pretty difficult, but totally worth it. Basically an algorithm toolbox.","The course isn't as bad as you might think, but there are still challenging moments, and the exams are a little insane. It's stuff worth knowing, but the class often presents an unnecessarily fuzzy or unclear description of concepts that, to be perfectly honest, are actually not that hard. If you're willing to demystify on your own time, it might be worth it.","124 is no doubt a tough class but it is also super useful. In fact, if you want a job in CS you MUST take this course. Multiple problem set questions appeared on my interviews and the algorithmic thinking helped me solve any other problem they asked. Also while it is tough it is not unfair. The problem sets and exams will be as you expect them without any weird tricks. Thus tough useful and fair is how I would describe it.","Do NOT take this class. You never have to, because if you're a CS concentrator you can take AM 107 instead. And if you really want an algorithms class, find a way to take 6.006 or 6.046 at MIT instead; those are sure to be better. It's incredibly difficult (on a scale from 1 to impossible, it's harder than impossible), not well taught, has awful assignment grade turnaround time, a problem set due on the same day as the midterm, lecture notes full of errors, and no practice exams. That said, it is useful material, but learning that material is honestly not worth it if CS124 is the class you have to take to get it, so my original assessment still stands.","It is hard. If you have a midterm on housing day like we did this year, you will be sad. But then again, the midterm will make you sad anyway.","This is a great introduction to algorithms - challenging, but rewarding if you put the time in.","This class is hard. Don't let anyone tell you otherwise. At the same time, it's incredibly rewarding and if you have any intellectual curiosity, you'll be glad you took this class. I would say mathematical maturity is more important than programming experience. For the programming assignments, pair up one math person with one coding person, and you should be fine. The midterm and final are killer. Don't underestimate them. Good luck and enjoy the ride! Even though it almost killed me, I'm genuinely sad it's over.","This class could be so much more if the course staff would affect a few changes. Professor Mitzenmacher is an excellent lecturer and he really does seem to care about his students. However, this care and excellence are tempered by a paranoid tendency to protect the problem sets and tests because \"there are only so many good algorithms questions out there.\" This is a weak excuse for not releasing solutions, and it does not fit the otherwise outstanding quality of this course. Furthermore, despite the very strongly worded collaboration statement, there is a huge amount of answer sharing in this class, with some instances worse than others. I heard that there was a mailing list of shared answers to the problem sets, and office hours towards the end of the week featured 10-20 people working together and sharing each answer as they figured it out. For someone who honestly followed the guidelines, it was exceptionally frustrating to see my peers cheating like this. Perhaps Professor Mitzenmacher should focus on stopping the fragrant, and indeed rampant, cheating and relax his protection of the problem sets a bit. I would say to take this course, but be ready for the details of a mismanaged class to drag down excellent material and lectures.","Get started on the psets early, and try to meet up with other people to work on them. For the exams: work quickly. They are longer than they should be.","This course is critical to the education of any CS concentrator, and provides interesting material for anyone tangentially interested in CS. While the assignments are difficult, they are manageable with adequate planning. The teaching staff is very helpful - though problem set answers or the midterm are not released, they can help answer any questions about them. Do not be deterred by the horror stories, I thought I would not like the class at all, and ultimately found I very much enjoyed the material (hard as it may be). You can take it pass\/fail, but at least take it.","I am baffled as to why Prof. Mitzenmacher is still allowed to teach this class. His lazy attitude toward teaching was frustrating and not conducive to learning. While the lectures were decently clear, I got almost no feedback at all on my work. Written solutions were not given for any of the problem sets, there were no practice exams or exam solutions, and solutions to practice problems we covered in section were only posted a few days before the final. It was not clear what was expected in terms of giving proofs on psets and exams. I know that Mitzenmacher wanted to keep the solutions private so that the questions can be reused in future years, but that's just lazy teaching. Also, the fact that he scheduled a midterm and a problem set on housing day (and was totally unwilling to adjust the schedule) shows that he doesn't really care about the students. \r\n\r\nIf you are the type of person who learns by example, this class will not be good for you. I would avoid taking this class if possible - don't take it as an elective. I didn't find the material interesting enough to be worth the time, effort, and frustration of doing the assignments, and I think I could have learned it by just reading the lecture notes or the textbook. that being said, dedicated TFs can make the experience less painful. Going to office hours a lot helped.","I found 124 slightly easier than 121, but they're both a solid chunk of work -- anticipate focusing your semester around this class.","Programming interview questions focus on algorithms. This class has been so helpful in getting me a job.","hard.","Very hard, very rewarding","Mitzenmacher's approach to teaching seems to be \"present the material and not care about students' struggles.\"  The same problems are reused every year, so you won't have practice exams to go through, and you can only get your midterm back for a limited time.  This generally prevents you from learning from your mistakes.\r\n\r\nHis responses on Piazza are rarely helpful and often condescending, a feature that I feel isn't becoming of any teacher regardless of tenure.\r\nThe material itself is quite interesting, but just be prepared for a professor like Mitzenmacher.","This is a difficult class, but you will learn a huge amount of really interesting material. Especially if you have some more experience with proofs, the problem sets will be fairly reasonable (especially since they are staggered at 1.5 week intervals, rather than every week); however, due to time pressure the midterm and final tend to be very difficult.","Very difficult, but very rewarding. Teaches you how to do algorithms and helps with job interviews.","The material, lectures, and problem sets are all really great. However, the exams are really geared towards a how-quickly-can-you-solve-these-problems type of mindset, and are pretty stressful. Overall, still definitely worth taking. Be prepared to work very hard.","If you're interested in algorithms, and are willing to put in the work, take this class. Otherwise it may cause a little too much stress, so don't take it on a whim or because all your friends are.","This class is suffocatingly competitive. It is interesting material, but the interest is nearly lost with a rude professor who ostensibly cares only about the top of the class.","Brace yourself.","Algorithms are annoying. If you see it you see it; if you don't see it, it might take you hours to realize something that is obvious to others. Very different from mathematical proofs, which has a systematic way to coming up a proof. The proofs for this class has no intrinsic structure; it heavily relies on your gut logic.","The material from this course is so valuable to have for tech recruitment season.  It does take much time to complete the problem sets and they are designed in such a way that you will need to collaborate with your peers.  The book listed is not very helpful for the course and describes the algorithms much to vaguely.","CS124 isn't too bad for an introduction to some basic algorithms, but it could be a lot more rigorous. Fairly light workload. I'd recommend taking MIT's algorithms courses instead if you want to learn more.","If you are a CS undergraduate required to take a second theory course - Do Not Take This One - unless you also consider yourself a math major.","Worth taking if you're going to be working in CS or are interested in learning tools for solving algorithmic problems.","Take this class because of the material.  Start the psets early, and focus on them, because they are immensely rewarding.  However, they are extremely brutal.  Take easier classes during the semester that you undertake this huge workload.\r\n\r\nAlso, don't expect to get a good grade in this class, let alone decent or timely feedback on anything.  It's also ridiculous that one of the harder psets is due on the same day as the midterm, meaning that your midterm performance will suck that much more.","The only CS class you need to take. I was totally not fond of the 120s requirement, but this has turned out to be my favorite CS class by far. Still not a fan of 121.","This class will develop both your programming skills and give you vital information about algorithm design. Don't be discouraged because of the class' relative difficulty - the learning experience is worth it.","This is a fabulous course. Mitzenmacher is actually a really great lecturer and motivates everything that we learn in class. Only issue is that the assignments can be a bit rushed. Sometimes material isn't presented until the pset is almost due.\r\nBe prepared to spend some time on this course though. It's not hard per say, but it requires concentration.","The exams are the only difficult thing in the course.","I learned a lot from this class and really enjoyed the material but it was consistently a struggle. Problem sets can crush you and the midterm is more of a test of mathematical reasoning and problem solving then real knowledge of the material. Still thought it was a great class but know what you are getting your self into.","The material is extremely interesting, and you'll begin to think computationally by the end of the course.","exams are quite difficult but the class is awesome.","It's hard but not that bad if you keep up with lectures and don't get behind","Algorithms are great! Be prepared to put in a lot of work, though.","This is all material you need to know.  Be careful in choosing a balanced workload of other courses when you take this course.","It's broccoli; you just gotta take it. This class was definitely tough, and placing the midterm on housing day with a problem set due was definitely a pain. The midterm and final were difficult. Even though the class was hard, the material was very very interesting and is definitely essential for any computer science major. Mitzenmacher, despite making things especially difficult (on housing day), definitely generates enthusiasm for the material, and lectures were very engaging and were well-motivated by relevant real world examples.","The class is hard but you get a lot out of it. Highly recommend to CS and math concentrators.","if you love math and problem solving, take this class. it's awesome.","Be prepared to work a lot for this course - you will also have to work extra hard to find your own practice problems or some means of studying as almost none are provided.","This is an extremely difficult class. In the end, I think I learned a lot about the concepts but I still have a lot of trouble applying them.","CS 124 was amazing.  If you enjoy thinking about interesting problems (kind of like high school math contests), then definitely take the class.  I even found the tests really enjoyable because the problems were fun to figure out.  The workload isn't actually too bad, but since the assignments are usually almost 2 weeks long, it's easy to put them off and make the workload seem a lot heavier than it should be.","Please take this class, especially if you are a CS major. It is difficult but the material is extremely interesting - stuff that every single CS major should have learned before they graduate.","Read CLRS! It's much more informative than the lecture notes.","useful","The hardest class taken this far in college; painful (to be fair though I did lean a lot but not sure how efficient the process is...)","If you every plan to program anything serious, you should take this class. Besides helping me pass my job interview, it covers some of the most interesting and relevant topics in CS.","If you're a CS concentrator, definitely take this class. The material covered in this class is at the heart of CS and will show up everywhere. Be prepared to spend long hours on assignments.","hard. very hard. but you learn a lot. be prepared to get bad scores... \r\nvery hard course, but a must for cs majors","As hard as everyone says it is, but definitely worth it. One of my favorite classes this semester, even with the all-nighters!","The assignments, while challenging, are doable and sometimes even interesting. The only really ridiculous part of the course is the exams, which are unfortunately impossible to study for because there are no practice problems. It's useful to have theoretical math experience from previous classes (math 23\/25+, cs 121, select applied math courses that have theory in them).","I honestly know 2 people that liked this course (not counting the TFs I knew) and it was because in their country they have been doing heavy math proofs since 6th grade. Pick up the recommended book CLRS from the very beginning and use it as your bible. It's not impossible, though, so just come in and make sure to be ready to spend a lot of time on it. Advice: do not take this with 4 other courses.","A strong background in math, proofs, and problem solving will prove very useful in this course. The material is interesting, but be prepared for challenging assignments and exams. While Mitzenmacher's lectures can sometimes be difficult to follow, his lecture notes are amazing. Because of this, I found the recommended textbook (CLRS) unnecessary.","Take this course. It's hard but I felt given the quality of students in the class most should be able to do the work. Read the textbook before lecture (or at least read the lecture notes directly afterwards)","This course is computer science vegetables. It is very hard, very painful and you'll be lucky to get a B+, but the material in incredibly relevant and any computer scientist graduating from Harvard should be familiar with it.","Cool material, killer midterm, manageable final. Some background in math definitely helps.","It's not as hard as people say. The material is very interesting. It is true that you can just read the lecture notes and do the assignments and do fine in the class. If that isn't enough for you, there is a large team of TFs that are all super smart (at least they were this year) that can help you.","it seems like a good class to take, there is good material and Mitzenmacher is pretty entertaining. but yeah, the exams are brutal.","A lot of hard work but it's worth the effort. MM not only covers the general topics in algorithms and data structure, but he also adds a valuable perspective based on his own research. I found some randomized approaches very interesting although I am not a CS major."]},"Spring '13":{"comments":["Although this class is demanding, it is very important and relevant material for all computer scientists. TAKE THIS CLASS! You will put in a lot of work but ultimately learn a lot.","This class is hard.  I would recommend taking an easier course load the semester that you take this course.  It's definitely rewarding if you spend time on it.  What you learn in this class will be extremely useful if you're planning on concentrating in computer science.","The material is very interesting and would be helpful for future job interviews\/programming in general. The programming assignments can be a bit rough, since they are open-ended. Try to start early. The material is not too difficult if you understand probability and proof-based math. The lack of practice problems for tests can be frustrating, but lecture notes are a good way to review. Definitely recommend this class if you are interested in CS.","Mitzenmacher's version of this class is hard but well worth the effort.","The class does what it says on the tin.","Rigorous course, but covers wide range of interesting material that is invaluable for anyone interested in pursuing a career in any field of science, which is becoming increasingly computational.","The way that Mitzenmacher teaches algorithms in this class really gets the theory across in a way that both lets you implement them well but also carry across those concepts to other areas of CS. Many find this class very challenging, but what you learn is so indispensable that it's worth it.","A difficult class but you will learn a lot and gain a new confidence in yourself as a computer scientist. Take it if you are looking for an opportunity to challenge yourself.","this class is super hard and yeah don't do it if you want a social life or a life or want to grow up and have kids because you will die kthx","Don't take this class if you aren't really math-oriented, at least while Mitzenmacher is still teaching it.","It is tons of work and you will fail the exams unless you're really really good at math etc.","CS124 is definitely one of the courses a CS major must take. You do need to learn about these algorithms and techniques before calling yourself a computer science major. However, the course is pretty challenging. So try to go through the lecture notes very carefully and make sure you understand everything in the note.","Decent class, exams are hard.","This class is very time-consuming, but it's a must if you're serious about CS. If you liked CS 20 and 121, this is a good choice. Just be sure that you have time to put in the work required throughout the semester.","Great course to take. Hard but worth it. I don't know how it will be since Mitzenmacher won't be teaching next year, but this year was a lot of fun. All the projects and psets really cemented what we learned, and its a great course as well for interviewing and other stuff.","This course is tough, and you might struggle with the problem sets and have to run around to different office hours throughout the week, but it's rewarding because at the end of the semester it will (hopefully) click, and you'll have learned so many useful algorithms and become a better thinker and computer scientist.","This is a class that you must take if you're seriously considering concentrating in computer science, or if you have an interest in problem-solving in general.","I mean, you have to take this class for the CS requirement (it's not completely required, but if you want to learn important things for your CS degree, you DEFINITELY need to take this class.) The class is hard. That's pretty much about it. It's interesting; Mitzenmacher was a great professor (now he's going on sabbatical); it's useful, but oh goodness is it hard!\r\nGenerally the medians and averages on the homework assignments are extremely high so it's possible you would be one of the smarter math kids that takes the class, but... otherwise, I would not expect to get good grades. It definitely gets easier after spring break, but it's pretty difficult otherwise. There are three programming assignments that are nice for programming CS people, but a lot of the theory stuff is really difficult and stuff.","I feel like CS124 had a reputation for being extremely impossible; it's not though! Perhaps it was nicer this year because there was one smaller problem set a week as opposed to a bigger every two weeks. You should take it!","Don't feel you need to take CS50 before this course if you have a strong mathematics background.","This class is extremely difficult, but it is absolutely necessary for a computer science concentrator.  If you want to get the most out of this class, expect to spend a lot of time trying to understand and digest the course and lecture material.  Office hours are extremely helpful for problem sets.","Take this course because it is necessary, but there are definitely things that can be much improved. Hope that it is better with the new professor!","Amazing class, very well-taught and structured. Prof. Mitzenmacher is awesome and the material is very interesting.","This course is a hard course. Make sure that you are adequately prepared (CS121, and Stat 110). Also, make sure to study Dynamic Programming, that's a biggie.","A \"boot camp\" of programming tools that will separate you from the pack in the job hunt and on the job.","This has been one of my favorite classes at Harvard! Mitzenmacher is a great professor; it's a shame that he won't be here next year.","It's difficult, but it's stuff you have to know if you want to pursue CS. Lectures were a bit tedious but the lecture notes were easy to follow and absolutely indispensable.","It was a challenging course, but very well taught with Mitzenmacher.  Who knows what it will be like after him?","If you have a sufficient math background, this class shouldn't be too difficult. The algorithms you learn in this class and their applications are really interesting and relevant.","Definitely take this. Who knows how it'll be with Jelani Nelson but hopefully still awesome. If you take the AM course instead you suck (that's addressed to CS majors). If you're a math guy you'll probably enjoy the course a lot and it'll probably be easier than it is for CS majors (but it helps to have a bit of programming experience).\r\n\r\nAlso it's very hard and grades are always a source for panic but whatever you need to learn algorithms and it's not all that easy to do on your own (more specifically, it's not that easy to self-teach the crit thinking behind coming up with an algo).","Such useful and interesting material. Not as hard as people make it out to be (Not a math genius, I had only one semester of proof-based math under my belt when I took this). Exams are depressing, but other than that the course is fantastic and Mitzenmacher is awesome.","Lots of work, but a very fun and interesting class overall.","If you are a CS major, you have to take this class. It is what CS is all about. However, it will be probably one of the hardest classes you'll take. Don't wimp out and take the AM107 replacement...","It is hard - very hard. But it is also very useful and rewarding. I have no idea how it will be without Mitzenmacher teaching it, but it will probably still be very hard. Not that it matters for you, but \"The Dark Lord\" was way better than most of us expected from his reputation (current theory is nostalgia) - he didn't even put the midterm on the same day that the hardest pset was due, on Housing Day...","A lot of work (especially before the midterm, but well worth it.","This class was amazing. While challenging, you'll be exposed to a lot of really interesting algorithmic concepts and see how they can be used to solve some reallly common problems (problems that you could actually see as a real software developer, i.e. calculating document similarity). Unfortunately Mitzenmacher won't be teaching next year so I'm not sure how the course structure will change. But regardless, data structures and algorithms are definitely worth learning (there's far more to learn than just the sorting and searching of CS50!)","Watch out","Great class to take if you don't care much about your GPA. I feel like I really know CS now after I have been exposed to all these powerful algorithms. Take it! It's really hard, but I think you will be glad when looking back on your work after finals. Try really hard and go to office hours. Also, it helps to know at least 2 different languages for the programming assignment. I used C and Java and it was much easier to code in Java. People also used Python. But just in case the code is not going well in one language or a problem seems to be easier in the other language, it is helpful to know more than one. I found the Programming Assignments in this class to be more fun than the written assignments (but graph problems were really fun on the written assignments, too). For the programming assignments, make sure you are getting the right results before turning in your assignments!\r\n\r\nI took this class after Stat 110 without CS121. I thought it was hard, but the second half was better. I was also taking APMTH 21b along with it. I think if you work hard enough, you can pull through. But be ready for a challenge!","Excellent class for an in-depth treatment of numerous approaches to algorithms and the mathematical tools required for algorithm analysis. Keep in mind this is not a class that just throws dozens upon dozens of algorithms at you to regurgitate on tests, but rather looks into a few key algorithms and mathematically why they work.\r\nKeep in mind that this class does require some mathematical sophistication in terms of discrete math and proofs, so brush up or take CS20 if you have never done this type of math.\r\nThe books are also great resources for looking at algorithms more in-depth as well as looking at a broader range of algorithms that cannot be covered in the limited class time. The books are not necessary to do well in class, since the lecture notes are usually fantastic, but still a great reference.\r\nOtherwise, it's not incredibly difficult.","This class is essential for CS concentrators (and for anyone interested in learning what CS is really about.) It's extremely useful because it gives you a toolbox of techniques that you'll be able to apply to new algorithm problems in future classes, projects, or interviews. The class is really meant to test your ability to apply techniques to new problems, so be prepared for challenging tests and problem sets that actually make you think in new settings. Also, be prepared to think rigorously about math-like problems.","You're not a CS major until you take an Algorithms course.","CS 124 has to be taken at face value. It's a fairly work-intensive course that teaches concepts that are absolutely essential to any computer scientist. You won't find it to be unbearably hard if you've taken any programming course beyond CS50 and either Stat 110 or AM 107. The material is presented clearly and sensibly, and the topics are never too hard to wrap one's head around (with the exception of dynamic programming, a necessary evil). All CS concentrators (and Math\/AM concentrators, for that matter) should take this course.","Great class! Fun material! Psets tend to be easy, but tests are fun!","awesome class! loved the professor","Professor Mitzenmacher explains at the beginning of this course that he aims to provide students with an \"algorithmic toolkit,\" and he does exactly that - he is an excellent lecturer who makes the material he covers both interesting and challenging.  However, very little feedback is provided on the assignments, which are graded harshly and sometimes in arbitrary-seeming fashion, and not much is done to help students prepare for the difficult exams.","Know what you are getting yourself into. There are certainly more difficult classes at this school, but this one is no cakewalk. The assignments are challenging and relatively time consuming, and the exams difficult. That being said, it's a very good class, and I recommend it if the workload seems manageable.","I went into this class thinking that 124 would be incredibly difficult - it definitely has that reputation. As someone who is not a super strong CS major, I absolutely loved it and found the material very understandable and accessible. Do not pass up on this class!","This class is a must for computer science majors. It's a shame Professor Mitzenmacher won't be teaching it in the near future, because his lectures are very helpful and well organized. Start the homework assignments early, go to office hours and sections, and don't be frightened too much by the midterm. The midterm is a serious time crunch, but the final is better. The grading seemed arbitrary to me, and harsh if you have an answer that's not exactly what they're looking for. Definitely allocate a lot of time for this class and have a good working knowledge of mathematical proofs. Stat110 is definitely helpful, and so is CS121.","Professor Mitzenmacher's exams are designed to be extremely hard to complete in the allotted time.  As such--and he states this explicitly--the goal in taking an exam should be to get as many points as possible in the time, not to complete the entire exam.","A difficult course. Do not take the assignments lightly, as they are pretty difficult.","The subject matter of this course is quite fundamental in terms of general problem solving, and it's covered quite well.","be prepared to bleed. Should be better next year. take it early for interviews....","If you want to learn how to be a good programmer this course is not essential. If you want to go on and do comp sci research, this course is a must. Unfortunately it is a CS requirement...","A challenge, but an extraordinarily opportunity to learn a large amount of useful information, especially for a CS concentrator.","Great fundamental material for anyone interested in CS. Though the class is notorious for its difficult I didn't find the material hard to understand; applying the concepts to questions on problem sets were definitely a bit tricky but you get used to it. Programming assignments were fair\/relevant\/straight-forward. Tests were also pretty fair although I wish we were given more reasonable practice problems (in the sense that the ones we were given were not similar in difficulty to the ones on tests). As long as you're working with people in the class you'll be fine.","Good class. Interesting material. Moderately difficult. I came in having taken math 25a and CS50, although I did have a couple semesters' worth of introductory computer science from Stanford's OpenCourseWare material. My roommate was a math 55er, although he had a little less programming experience. Having someone like him to collaborate with made things easier. Problem sets were fairly easy -- way less work than Math 25 psets. Took 4-5 hours working with a friend. Exams are a b*tch. Best way to prepare is to do practice problems under time pressure.","Fairly time-consuming class and tests are quite difficult, but learned a new way of thinking.","A difficult class with interesting material which is fairly applicable in many ways, but feedback is little with long turnaround times in grading.","A bunch of my peers dubbed this class CS 124\/7, because it will take up a lot of your time (unless you have awesome math intuition \/ are super smart). Having not taken CS20 nor 121, there was definitely an adjustment period I had to go through to catch up on certain material at times, however, the work you put in is most definitely rewarding in the end. You get what you put into this class, and I found that going to office hours and talking problem solving approaches through with your peers and TFs was definitely where I found the most reinforcement of what I had learned during lecture. If you have a genuine interest in problem solving, definitely take this class, but if you hate math and all things related, you will probably find yourself frustrated with this class.","Necessary material for any serious CS concentrator, but a very painful class overall.","You'll learn. You'll learn the hard way, but you'll learn (and often, you'll like it too)","This is a tough class but you will come out with a \"toolbelt\" that will serve you well when thinking about all classes of computational problems, and it will genuinely make you a more intelligent person for taking it.","The exams are the hardest part of this class. Prepare well and work furiously","This course is a fun source of problems, and it's interesting to learn about various fundamental techniques for solving basic problems.","This is a great survey of well-known algorithms. By no means a coding class, it requires a solid background in proofs and some knowledge of combinatorics. A must-take for all prospective CS concentrators.","This class is one of the best CS classes that I've ever taken at Harvard, and it's an amazing introduction to algorithms. Unfortunately, Mitzenmacher is not teaching it next year, so who knows what it's going to be like? But if you're apprehensive about taking a theory course, don't be! Theory s actually very interesting, and as long as you think you'll be fine!","Take this class. It's hard, but even if you haven't taken CS121 or Stat110, it's doable. I highly recommend reading Mathematics for Computer Science and the Kleinberg & Tardos textbook.","I obviously can't say what the course will be like after Prof. Mitzenmacher leaves. Hopefully, in the future, it will continue to be as well-taught \/ designed. But regardless, any CS concentrator, or non-CS concentrator interested in CS, needs to know the material taught in this course. It's fundamental to computer science.","Tough but useful."]},"Spring '14":{"comments":["The number of times I've watched the sun rise because of this class is ridiculous.  Programming problems start off as doable and then becomes extremely time consuming due to the way they graded with test cases.  More often than not, by programming incorrectly and intentionally not handling corner cases or caveats in the problem, I received more points.  That's ridiculous because this class is supposed to teach and grade based on proper programming techniques.  Except it's tweaking just so you could handle the test cases they want.  The time problem sets were due is also poorly planned.  Why would you make the problem set due 11AM in the morning and then expect everyone to show up to your class right after your deadline?  Sorry, I'm sleeping and trying to recover.\r\n\r\nDoing work in the class is fruitless as well.  I don't feel like I'm learning anything if I'm turning in assignments and not receiving feedback.  All other classes grade and provide more feedback than the 1 liners they send through email.  The refusal to share solutions on problem sets or exams makes it incredibly hard to learn from mistakes or even knowing what mistakes you made in the first place.\r\n\r\nThe biggest problem is obviously the grading scale.  Although I give Jelani Nelson the benefit of the doubt for being a new professor at Harvard, he clearly does not understand what the Harvard curve is.  Also for the difficulty of exams, if the average for an exam is under 30%, there is something wrong.  You are clearly giving exams that are beyond us in addition to refusing to provide us the necessary resources to study properly for them.\r\n\r\nI would tell all CS concentrators to avoid this class, especially if you don't have a strong math background.  Consider taking one of the AM courses that substitute for the theory requirement instead.","S**t  class; do not take. Or if you have to take, expect a lot of nerves and sleep hours to be burned.","The material is fantastic, and Jelani is an amazingly knowledgeable professor. I've had too many quantitative classes where the material was difficult and the staff seemed to make so many mistakes themselves that it was hard to get help from them -- for me, this was not one of those classes. 124 is a real opportunity to grow as a programmer and learn valuable, generalizable algorithmic techniques that will be useful everywhere. \r\n\r\nThat said, the class suffered from organizational problems (which is fine, given that it's a new professor). Very few resources existed to help students practice on their own, short of the recommended textbooks. Sections were often very crowded (however, perhaps this is a function of last-minute behavior on the students' part) and the problem sets\/exams will often be maddening in their difficulty and non-generalizability; many times, even if you understand the concepts from a section very well, you still won't be able to finish the pset without a brilliant insight specific to the structure of some particular problem. \r\n\r\nHowever, the difficulty and frustration inherent in the exams and psets may be inevitable -- algorithms seems to just be a very hard subject. I'm also sure that all the criticisms I've mentioned will be ameliorated with time as the course staff grows into its role. In all, I recommend 124 -- at the very least for the material. It's simply fantastic, and the course staff will only get better at teaching it.","This is the hardest class I have ever taken at Harvard. Not only it messes with your health, but also to your overall attitude. The psets are so hard, you won't ever, ever sleep on Wednesdays (they are due Thursday morning), and you will stress for the rest of the week. This class will make you become a bad person - because you have to solve problems this hard, you won't be able to show any empathy to the people around you, who complain about writing a paper or reading a book. This class will make you lose any drop of confidence you have in yourself. More importantly, it won't really prepare you for the Tech Job Interview, even though it's supposed to. If you want to study Algorithms, take AM107, or just Cross Register at MIT for their course 6.006. I always studied from their course materials, they were so much better than ours!","This class is hard, but it certainly could be much harder (like half of the algorithms are just slight variations of Depth-First Search). It's a ton of fun, though--the programming problems are awesome, the math is really engaging, and I certainly was exposed to a good breadth of material. Some students got pretty worked up about the lack of transparency in the course (they don't release pset\/midterm solutions, Piazza staff answers were pretty shitty at the beginning of the course), but it all turned out alright. Jelani is the man, and course staff is obviously qualified, and, all-together, they run a tight ship. Take this course!","You must have friends in this class to help with the psets.","This is a very hard class. Know this going in, and be prepared to put in the work. The material itself is not too bad, but the psets can be tricky (find good pset buddies!) and the exams are extremely difficult---mean was < 50% for all 3 exams. Unfortunately the course is not that supportive of students, either. Pset and midterm solutions are not posted (only available as hard copies at office hours), there were no practice problems for any of the exams, and the course staff had a slightly \u00e2\u20ac\u0153go figure everything out on your own\u00e2\u20ac\u009d attitude. If you come into this class knowing how to problem solve or have prior experience with algorithms, you will be OK, but for everyone else it\u00e2\u20ac\u2122s going to be a struggle. My advice for you: put in the time every single week, and don\u00e2\u20ac\u2122t expect to be able to cram the material. Buy the book---I recommend Algorithm Design by Kleinberg and Tardos over CLRS. Go to lecture, go to section, read the book, do tech interview questions, think about the pset by yourself first before asking questions, and basically eat\/drink\/sleep the CS 124 material. You will have to work really hard to do well in the class, and you might not get as high of a grade as you would like, but in the end you will learn a bunch of relevant and interesting things and emerge as a stronger person.","IF Jelani is teaching it again next year, wait until the next professor. Unless you don't like sleeping.","Do not take this class unless it's a concentration requirement or you just love getting totally screwed on material that should be very interesting.","CS124 is what you make out of it. The community is great and many TFs are always willing to help out if you're forthcoming. It is a class where you probably have to do lots of additional reading to fully understand the material, and strong mathematical background is also a prerequisite. Expect many late-night PSET sessions!","This class is difficult, but the material is useful and inherently interesting. Students complained a lot, especially about the policies regarding pset and exam solutions. The course staff tried to address these concerns, though it seems that their hands were tied by the policies of the previous instructor. Exams seemed to favor being brilliant and being a good vulture for points over studying material covered in lecture. Lectures were effective and office hours were good ways to tackle the most difficult pset problems.","If your concentration requirement allows, consider pass\/ fail as an option. I cannot say how many times this semester I appreciate my decision of taking it pass \/ fail. I still do most of the work and understand the material, but it really takes off a LOT stress off me. at some point, spending twice as much time on the pset (texing it up, writing up very single detail rigorously and neatly etc ) does not necessarily mean you can get twice as much out of it. It is all about maximizing knowledge\/ time efficiency.","It's HARD","Really hard exams, hard problem sets. Having no solutions to pretty much everything (except in office hours near the end of the course) made reviewing old material pretty difficult. Jelani lectures pretty well and it seemed like the TFs were trying to help, but there were definitely a lot of problems with the course.","The material is incredibly interesting and useful. Professor Nelson is absolutely brilliant, but may not have a clear understanding of his students' capabilities. Some problem set questions relied heavily on math or programming \"tricks\" and the exams were very long and difficult. On the other hand, Professor Nelson and the rest of the teaching staff generally made themselves available to students and were very good about answering questions on Piazza. I lost a lot of sleep and self-confidence in taking this class, but I did learn a lot, and it was definitely worth taking.","My understanding is that Jelani will not be teaching this course next year, so this isn't very applicable. But if he does teach it again, be prepared for a very unsympathetic course that will slam you to the ground with tough psets and insane exams, but make it difficult to pick yourself back up because there are no solutions available online (some of us have pretty crazy schedules and it would be nice to be able to access solutions at our convenience). On Piazza, one student commented on the \"disconnect between the staff and the students,\" and I think many of us would agree that it sometimes felt like the professor\/course staff lacked empathy for the students.\r\n\r\nStill, it was a cool course that covered interesting material that is fundamental to CS, and I think Jelani\/the TFs put effort into selecting challenging problems.","This class is great!!  A very chill class.  There's a bit too much coding and not enough theory, but other than that it is really good.  Jelani is awesome.","124 is a wonderful treatment of material that should be at the core of any CS curriculum.  Jelani is a clear and direct lecturer, who writes very good (albeit challenging!) exams and problem sets.  The combination of larger enrollment and increased difficulty (from Mitz to Jelani) resulted in a lot of student unhappiness.  But I don't think the course staff deserves anywhere near the level of hate they received.  Certainly this class doesn't make you feel warm and fuzzy like CS50.  And algorithm is a hard subject taught rigorously by Jelani.  I think Jelani and the rest of the teaching stuff were more than generous with their time and willingness to help students.  I would recommend that any CS concentrator take this course.","Be ready to spend 20 hours a week at least on this class. Go to office hours and work on the written problems early. Start the coding early. Unless you do, be prepared for all nighters every week. Don't expect homework solutions to be distributed or practice problems to get ready for the exam. Jelani's a nice guy, but this class will rock you.","It's very difficult, and will destroy your life","Be prepared to spend 20+ hours on psets every week","This was by far the hardest class I have ever taken at Harvard. While the material was hard to learn, what made it even more frustrating was that the TFs were generally not too helpful during their OH, and pset\/midterm solutions were not provided to students. No practice exams were provided to help students prepare for the midterms\/final, and I've never felt so \"blind\" in a class before. Psets were much harder than years before, and the right amount of support\/help was not provided to students. If you have to take this class, just take it, but make sure you can find a good study group and good practice material, because the class will certainly not help you.","This class is really hard, but you will learn a lot. It can be frustrating at times, especially if you are not comfortable with math. The weekly psets are rather lengthy, and took me >20 hours to complete. The programming assignments are a great addition to the class, but will double the time it takes to complete the pset. The average for the second midterm was a 33%, but the class is curved.","This class covers a lot of very interesting material at a reasonable pace and depth. Workload is interesting and pretty light, and the programming problems were a nice additional component of homework. Tests had very interesting problems too, but there often wasn't enough time to give them proper thought.","Brief:\r\nDo not take this class unless you have taken CS121, AM107, STAT110, and have a strong mathematical maturity (think Math23+). If the aforementioned does not describe you, this class takes too much time and will likely ruin your semester. Take AM106 or another theory class instead.\r\n\r\nSome History \/ Longer Explanation:\r\nThis class covers essentially two courses worth of material at MIT (6.006 and 6.046) which causes CS124 to be senselessly challenging. Interestingly, MIT used to teach 6.046 in exactly the same manner as CS124 before 2007. Here is the course website from 2003 for 6.046 (http:\/\/courses.csail.mit.edu\/6.046\/spring03\/). It is important to note the \"Extra Help\" section prominently displayed on the old-school web page. This year, Harvard did not have any tutors from the BSC for CS124. Because the MIT version of the course covered too much material, in 2007 MIT introduced 6.006 to take the burden off of its students. Harvard should follow in MIT's footsteps and break up the course into two classes.\r\n\r\nThe material in this class is incredible it is some of the most profound and useful concepts in all of computer science; however, the structure of the course needs to be reformed so that all of the students who take the class can benefit from the topics covered and not just the most mathematically gifted","You'll learn a lot but be prepared to not sleep the much and fail every exams. Also, be prepared to never see solutions to any of the psets or midterms, have absolutely no information the content of exams, and never see a single practice problem. The class caters to individuals who are very intelligent and can understand the material after seeing once. Not necessarily a bad thing, but it makes it difficult for those of us who struggle more and need extra help. There are a ton of OH for the class but they're often overcrowded and it can be difficult to see a TF. Jelani's a great lecturer but I hope in the future he'll make the coursework more manageable (assuming he's teaching 124 again). But that's just my two cents!","This class is not currently at a point where you should go in to exams expecting to get any points at all if you didn't study. Beware.","The hardest CS course I have ever taken; every problem set and exam especially was a kick to my butt and self-esteem. However, it is one of the most important courses to take as a computer scientist - the coverage of material is broad and interesting, and it's stressed so much to think efficiently rather than just monkey-coding whatever brute-force algorithm comes to mind at first glance. The derivations are quite beautiful, if not absurdly complex. Also, Jelani is a boss.","Take it. The material is interesting and Professor Nelson is a new professor which is why things were bumpy this year. Obviously he is doing his best to improve and it was always clear he cared very much about the students. That being said, this was a rocky year so don't be surprised when the class is hard.","This class is difficult, but I believe it is a must-take for anyone considering CS as a concentration. It is not comparable to CS121. You will know after this class whether theoretical CS is your thing or not.","This class is very hard but you should definitely take it if you want to concentrate in CS. The material is extremely essential for anyone who wants to do CS, and it is also very interesting. That said take easy classes with it as it will be taking up a very large amount of your time every week. If you don't want to concentrate in CS its still very interesting but probably not worth the amount of work.","Though the material is certainly important for a computer scientist, I felt that there was a huge disconnect between the students and the professor in this course. This resulted in many painful nights and tensions between the students and the staff.","It's the hardest class I've ever taken, but also the most rewarding. I took it concurrently with CS51, and you basically learn everything you need for CS51 in the first week of CS124. I highly recommend having stat110 and proof based math, as the latter half of the course is very probability heavy.","Very difficult and time consuming, but this is the foundation of computer science and will likely prove useful whatever you decide to do with your life. I'd recommend taking it for this reason despite the unforgiving assignments Jelani hands out.","CS 124 is definitely a good class for forcing you to go over algorithm fundamentals, and the breadth and depth of the class were both quite good overall. However, the class seemed a bit disorganized overall, with students left to sink or swim on their own effort.","Wait until there is a change in professors before taking this class.","Take this class because honestly it is very useful. It is this class that will make or break you into a true CS student. However, it is extremely difficult.","It's a tough class, but you come out appreciating the thought that goes behind trying to implement algorithms quickly. At least in my case, I'm way more interested in algorithms now than before I took this class, and I guess in that respect, this class was a huge success.","I was very excited to take this class with Jelani, although he's just not a great course leader. The coding assignments on each problem set were very taxing. Moreover, the structure of the class seemed to encourage us not to solve problems on our own, but to instead learn how to do problems from people who've done them already. Super discouraging, as it made me feel like I can't do problems on my own.\r\n\r\nYou'll pull all nighters the night before each problem set is due, and if you are taking other difficult classes along with this, it can literally ruin your performance in them.","This class was very difficult. I heard that the class is even harder than previous years due to the new professor. This said, Jelani was very helpful in answering questions. His lectures could be more clear and organized though, and he is a bit misguided on what would help students learn best (hard not not necessarily mean that you will learn a lot). Be prepared to put a lot of time into this course, and to do poorly on the exams no matter how hard you try. Still, I learned some cool algorithms, so this class is worth taking if you have the time and are truly interested in the topic.","Good for interviews","I found this course to be really educational and very interesting. However, Jelani blatantly disrespects the students in the course on a daily basis, and this made my experience with the class very negative at times. Additionally, the problem sets were VERY difficult, so much that I spent all-nighters on about half of them. If you're thinking about taking this course, be prepared to spend a ton of time on it.","I have mixed feelings about the class. On the one hand, Professor Nelson was very intelligent, the material was really very interesting and the psets and exams were challenging. On the other, the course policies were inflexible and harsh, and sometimes made the course feel more like a burden rather than something I was enjoying. Make sure you are comfortable with Nelson's expectations if he teaches it again. (To be fair, this is his first time teaching it, and while he seemed inflexible, it was not because he ignored student input -  he did seem to care a lot about the class.)","This is a fantastic course in which you will learn a huge amount of computer science. I will warn you now. You will be pushed to your limits. Expect to spend huge amounts of time doing problem sets and preparing for exams. Be prepare to be frustrated by the weekly coding problem, which usually takes more time (or at least the same amount roughly) as the rest of the problems combined. That being said, every question on every problem set will push you to think deeply about problems and push you to be a better thinker as a result (with the first problem set - a pretty easy one - being the exception). This is class that you will probably complain about to your blockmates when you take it, but one that you will not regret taking.","My favorite class taken at Harvard so far! The material is really interesting and Jelani presents it very well in lecture too. The teaching staff is generally very supportive and helpful during Office Hours too, which some of you may be living in! \r\n\r\nSome downsides are the all-nighters that you might have to pull trying to get the programming problem to work, or typing up tedious proofs to solutions. The exams are quite challenging. This year, their averages were 50% and 33% respectively... but I assume they will be more doable in future years. \r\n\r\nJelani and the teaching staff really listened to students' opinions and published hardcopies of midterm and pset solutions, which were very helpful. \r\n\r\nOverall, highly recommended class, especially if you really like math and theoretical CS.","You more or less have to take this course. It is, however, not very enjoyable.","Wait it out if you're an incoming freshman (unless you're gunning for a freshman internship at Google or something). The course needs serious improvement, and the staff needs to be more understanding and reasonable. Here is a summary of my comments:\r\nToo much covered in too little time. If you're covering this much, then you can't test it at the insane graduate level that you test at! Plain and simple. The course expectations are entirely unreasonable. The final was a bit better but then the median is just going to be higher. In CS121, exams were designed in such a way that people can actually do well, and you don't need a curve.... Lectures were terrible.. There's a reason few people (except those who already know all the material) show up. Jelani can't really teach well, and has this sort of attitude that students should just know things like it's just so easy. The TFs seem haughty and arrogant as well.. Also, not being able to drop a pset was very rough and demanding of this course. The advanced Fold-Fulkerson programming problem was a disaster; many people didn't get it, and didn't have the opportunity to drop the pset they were struggling with... If you want to do well in this class, you need to already have taken or self-studied Data Structures and Algorithms. If you took the Data Structures class in high school, you should be in good shape. Otherwise, make sure you read through CLRS and do all the problems in the book before you step foot into this insane class\u00e2\u20ac\u00a6","This course is unforgiving. The problem sets are ridiculously long (I dropped out of all extra-curricular activities partway through the semester in order to make more time for psets), the exams are longer and must be completed in an hour and a half, and the professor is deeply unsympathetic. While he is correct that once you have whatever insight is needed to solve these kind of algorithmic problems they are not THAT bad, arriving at said insight is non-trivial. Expect to spend hours not progressing on homework problems while you try literally everything. \r\n\r\nThe programming problems also have a delightful quality whereby you might spend eight hours writing your solution only to discover that it was too slow. Your options at this point are either to accept what is probably a 30-50% on that problem or go back to the drawing board and start over. There's no real information as to what kind of asymptotic run-time you should be shooting for, and as a result I encountered the above situation on several of the assignments.\r\n\r\nFurthermore, the course was disorganized, with a good deal of misinformation and miscommunication between the professor and course staff. If you have access to the piazza forums from 2014, take a look and see how many posts amount to \"Hi, a TF told me X? Is that really true?\" with a reply from the professor reading \"No,\" without any elaboration. Even one such post would be problematic. You will find many.\r\n\r\nThe difficulty of this course also means that your grade will be EXTREMELY dependent on the performance of your peers. The standard deviation on the pset scores is very high and the scores on the exams are very low, so it can be difficult to judge how well or poorly you are doing in the class. At time of writing (before the final exam), if I got any final grade in this class from a B to an F I couldn't honestly say I was surprised, because I just have no frame of reference.\r\n\r\nIn conclusion, this class will ruin your life. The sheer volume of work needed to get you a B in this class would get you an A+ and a shining diamond crown inlaid with gold by the Pope himself in most other courses. Unfortunately, if you are in CS you have to take this. So... Sorry, I guess. Sucks to be you.","Jelani has made this a grind. I took it in concurrence with CS20, that's a good combination because 20 is a joke so you'll have more time to work on 124, which would also make 20 look like even more of a joke.","I have mixed feelings about this course. On the one hand, the material is fantastic, but on the other hand the course organization could use a lot of work. Some examples: solutions to pset problems can be viewed only at office hours, there are no late days, we had a problem set due two days after an incredibly different midterm 1, we had no problem set the week of the second midterm but instead we had two programming assignments the next week, occasionally material necessary for a pset due thurday was introduced on tuesday, no past midterms\/exams are posted, etc.","You'll see some interesting mateiral and great algorithms. I didn't take CS 20 beforehand and had no proofs background. I caught on to that element just fine-- just learn proof by induction during winter break or something and do maybe 5 practice problems with it and another 2 with proof by contradiction and you're fine. You'll learn how to do proofs over the course of the class and that will be helpful.\r\n\r\nI'll be brief, because I'm sure my peers have already given you the gist of this course. Lectures were needlessly filled with long proofs, course policies were unreasonable, and it was very very hard to learn in this class. If you do take this, WATCH THE MIT LECTURES ON YOUTUBE AND READ THEIR NOTES AS A SUPPLEMENT. They explain the intuition much better and provide suggestions for example problems to do. I learned how algorithms work in this course, but I didn't know how to create them or use them in novel situations. In this course, prior experience was too big of a factor in how well you'd be able to solve the problems.\r\n\r\nAlso it was disorganized. Each section taught by a random TF each time. I was disappointed.","Be prepared for this to be your hardest course of the semester. It's quite rewarding if you put in the requisite time on the problem sets and studying for exams; you will certainly come out of it feeling much more knowledgeable about algorithmic and data structural analysis. Teaching staff are quite helpful, but there is no substitute for a good study group of peers, with whom you can talk through ideas. Overall a great and practical course! I would recommend with enthusiasm.","https:\/\/docs.google.com\/document\/d\/1-IsunkDahbJqzoaaXnEQDUw71307TX5wj0H_5dY9Uz8\/edit?usp=sharing","Do everything you can to avoid taking this course with Jelani Nelson. He led a course staff that actually antagonized students, and seemed more concerned with doing things his own way than helping students. He almost seemed to pride himself on unhelpful responses to students, including things like he would rather \"die than discuss the format of the final.\" Otherwise, the course was difficult (as expected). Jelani's exams were incredibly challenging, with means of 50 and 33 percent for the two midterms. I do not believe these midterms were effective in determining how much students learned in the course. The material was interesting, and the course notes are very helpful.","Very challenging course, though not without its rewards. Grading is tough, particularly on the assessments, and the course staff is very reserved about the materials it releases. No practice tests, homework solutions, past exams, or any materials apart from the course lectures, which makes solving problems to the high standard that is expected very difficult","If you're doing CS, TAKE THIS CLASS! This covers the necessary data structures and algorithms stuff that any computer scientist should know. And it will help you a ton with job\/internship interviews. It might get a reputation for being hard, but it's a TON of fun and the psets don't actually take all that long, especially if you have a group to work with. Since the problems are often problem-solving and you need to see a specific insight, having a group to do them with helps a ton. The coding problems were the highlight of my whole semester.","Do NOT take this course if you can as it moves too fast to actually learn anything - better off learning material online. Class might actually be useful if you make sure you first take \/ are expert at programming, discrete mathematics, statistics, and probability.","The assignments were challenging and most of the teaching staff were unprepared to adequately answer difficult questions from the students. The section component of the course was generally lacking in helping students through the material. There was a good faith effort from the instructor and the teaching fellows, but the amount of support in this class was very lacking in the face of the difficulty of the assignments and exams.\r\n\r\nAlgorithms are still a very interesting and worthwhile topic of study, and if the material interests you highly, then this class may still be worthwhile as you will learn a lot. Prepare for a lot of work. Hopefully there will be a greater level of support next year.","Difficult but a class that you must take if you are studying cs. It's definitely worth the allnighters.","If Jelani is still teaching and course policies have not changed, avoid this class if you can. The concepts are very interesting and important. But the benefit of learning these things from this course instead of on your own or in a different course is vastly outweighed by the struggle of taking the course. it WILL consume your semester by its sheer difficulty.","Unless they change the way the course is run in the future, expect to have to do more work than usual to access the resources you need to actually learn the material. No practice tests are provided, so you have to find your own. Solutions to psets\/midterms are not distributed, so you have to physically go to office hours to look at them.","Well this class is required, so if you're concentrating in CS, you have to take this.\r\nThis year, Jelani Nelson taught the class instead of Professor Mitzenmacher. From what I heard, Professor Nelson tried to keep the course relatively the same as when Mitzenmacher taught it. However, there were a couple of changes this year. The problem sets this year were weekly and had a coding part in each assignment. There were no partners in the class, which I appreciated because it forces you to really do the coding yourself. There was also an increase to two midterms this year, instead of the usual one. I appreciated this as well, as previous years had the midterm held on housing day. \r\nWith regards to the problem sets, it seemed that there were different labelings of problems, with some being the same as previous \"Mitzenmacher\" questions, and some being \"Jelani' questions. I think everyone pretty much agreed that \"Jelani\" questions were much more difficult but at the same time much more interesting than the other kinds of questions.\r\nThe TFs also told us that there isn't much communication amongst themselves, which was a cause for concern. This meant that what you learned in section varied amongst the TFs, and overall, I thought section was relatively useless in comparison to just reading the lecture notes.\r\nThe class size also dramatically increased from previous years, and as a result, there were more people at the extremes of the distribution. This may have led to the conflict that was on the piazza website, which I won't go into details here. The environment caused by this conflict really left an uncomfortable feeling in the students, so hopefully that doesn't happen in the future.\r\nOffice hours also varied amongst the TFs. Some of the TFs were completely unwillingly to help and refused to look at student's code. Other TFs were more willingly to provide useful hints. \r\nOverall, there were some positives and negatives in the course. I think there course can and will be improved next year.","I came into this course having taken the Math 21 series and Stat 110, without having taken CS 20 or CS 121, and took CS 51 concurrently. I found this course difficult, but so did my peers who had taken those courses, so it is possible to take this course without them. The material was really interesting, and I really enjoyed learning about it. I would have enjoyed this course a lot more if not for the draconian policies it had in place: no late days\/hours, no paper submissions, no collaboration on programming assignments. On top of all of this, solutions to past assignments and exams were not posted, so we had no way of learning from our mistakes. Exams were unreasonably difficult. TFs were not given solutions to assignments, so they had to solve the problems on their own in order to be able to help us (which seems remarkably inefficient). I would not recommend this course with this instructor unless you are willing to endure 15+ hours of pain weekly, or you need to take this course for the concentration credit.","This class is extremely interesting but also very difficult. Be prepared to work for a long time on the psets and programming assignments (especially if you want to do them properly and work alone for most of the time to truly understand the material). Jelani might be harder than previous teachers, but he is a great teacher for the course.","This course is NP-Hard. It is the hardest I've ever worked for some of the lowest scores I have ever seen, but there is no doubt in my mind that if you are reading this right now, you should take this class. This course really teaches you how to think about problems and break them down in a way that can be solved efficiently; in the process, you will also likely break down. If you want to do a thorough job on the problem sets, expect to spend fifteen hours or more every week on the theory and coding challenges, and know that pretty much everyone on campus still awake at 5:45am on a Thursday morning is probably working on the 124 assignment for that week. Go to office hours for psets, it will really clarify some of the trickier aspects of the harder questions. As for the exams, they will give you a new definition of the word difficult (unless you are used to competitive math or CS; in that case, feel free to apply your definition to these exams). Time constraints and the sheer challenge of the questions will make you walk out of the room wondering what just happened. In summary, this course is very difficult, but you have to take it because the content is just too good to miss out on and there is a really smart staff and professor behind the difficult questions that you are learning from.","This was the most difficult CS course I have taken so far, but it is far from impossible. You will likely suffer, but everyone suffers together. Also Jelani really cares about student's concerns (some people were (anonomously) very vocal about lack of pset solutions and he did his best to accommodate. I'm sure with this year under his belt, next year's offering will go a lot smoother.","It's really unfortunate that such a fundamental class to Computer Scientists was handled so poorly this year. At every turn (from no dropped psets, to the ridiculously difficult midterms, to the snarky answers to Piazza posts) I feel like the class preferred to be difficult than helpful, as if struggling is a necessary component of learning (it's not).\r\n\r\nI think the material is extremely important for Computer Scientists to learn (as anyone who has ever had a CS job interview will tell you), so hopefully the inevitable wave of criticism from the Q will help this class out in future offerings.","Professor Nelson is pretty good -- his lectures are somewhat dry but he does a pretty good job getting the idea across.  The psets are quite hard, and will take a lot of time, but you will learn a lot.  The exams are absurdly difficult, which is annoying for a number of reasons, including a squeezed distribution which punishes you if you make any kind of silly mistake.  Overall, an extremely taxing experience, but a rewarding one.","If you are concentrating in CS, you will be expected to know this material when you graduate.  None of the replacement classes cover it as well as this one (I took AM107 as well).  This class is a lot of work and you get out of it what you put into it, but it's hard to find the time to get as much out of it as you would like.  The midterms are designed to be difficult and sometimes turn out even more difficult than intended.  I am writing this response prior to taking the final because the final is in the last slot and I will not have time to write it before the system closes two days later - no idea what fresh hell that will inflict.  This class also allows you to bond with your peers as you mutually struggle to get it done before the deadline.  And that is what CS is all about.","Very difficult, poorly taught, impossible exams, and difficult problem sets. Interesting material, but impossibly hard.","Of all the courses in the CS department, CS124 is one of the most useful for those interested in pursuing CS outside of college.","The content of this class is essential for any CS concentrator and useful for anyone interested in computation. I thought some of the suffering inflicted on us was unnecessary though (e.g. not making midterm\/pset solutions available online, setting the midterm to be so hard that the mean was 20\/60, etc). However I'd still recommend this class, if only for the lack of alternatives.","The materials for this course are fantastic and extremely useful. I highly recommend taking this course, despite it being so difficult.","It's a death march, but the you need to suck it up and get through it to learn the material in the course because it is all very useful to any CS major.  Expect this class to take up the majority of your time during the semester.","This is a very difficult course. I would not recommend taking it unless you are a CS concentrator or are very serious about learning CS. This year's iteration was probably worse than most. The course staff were often very unhelpful on Piazza, and they generally did not seem to care about students' learning. For example, they were unwilling to distribute solutions or specific practice materials for exams, and scheduled a problem set to be due 2 days after a midterm, which did not promote learning of that pset's material. Fortunately, all of these grievances are administrative, and I think by the end of the semester the staff was on the road to fixing them."]}},"mostRecentQ":{"overall":"3.10","workload":"4.40","difficulty":"4.50","recommendation":"3.30","enrollment":"147","response rate":"71.43","QCourseOverall":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"16","2s":"18","3s":"24","4s":"23","5s":"19"},"QDifficulty":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"8","4s":"31","5s":"61"},"QWorkload":{"number":"COMPSCI 124","course_id":"1231","cat_num":"5207","1s":"0","2s":"1","3s":"13","4s":"31","5s":"56"}},"success":true}