{"scores":{"Spring '14":{"course_score":{"overall":"4.90","workload":"5.00","difficulty":"4.50","recommendation":"4.90","enrollment":"15","response rate":"73.33","QCourseOverall":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"0","4s":"1","5s":"10"},"QDifficulty":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"1","4s":"4","5s":"6"},"QWorkload":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"0","4s":"0","5s":"11"}},"instructor_scores":[{"number":"COMPSCI 161","cat_num":"4347","course_id":"1239","year":"2013","term":"2","id":"69e7709bfa572dad6549b62e71dde145","first":" Margo I.","last":"Seltzer","InstructorOverall":"5.00","EffectiveLecturesorPresentations":"4.90","AccessibleOutsideClass":"4.90","GeneratesEnthusiasm":"5.00","FacilitatesDiscussionEncouragesParticipation":"5.00","GivesUsefulFeedback":"4.80","ReturnsAssignmentsinTimelyFashion":"5.00"}]},"Spring '13":{"course_score":{"overall":"4.70","workload":"4.95","difficulty":"4.67","recommendation":"4.60","enrollment":"45","response rate":"95.56","QCourseOverall":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"0","4s":"1","5s":"10"},"QDifficulty":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"1","4s":"4","5s":"6"},"QWorkload":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"0","4s":"0","5s":"11"}},"instructor_scores":[{"number":"COMPSCI 161","cat_num":"4347","course_id":"1239","year":"2012","term":"2","id":"69e7709bfa572dad6549b62e71dde145","first":" Margo I.","last":"Seltzer","InstructorOverall":"4.79","EffectiveLecturesorPresentations":"4.73","AccessibleOutsideClass":"4.72","GeneratesEnthusiasm":"4.85","FacilitatesDiscussionEncouragesParticipation":"4.89","GivesUsefulFeedback":"4.71","ReturnsAssignmentsinTimelyFashion":"4.29"}]},"Spring '11":{"course_score":{"overall":"4.38","workload":"5.00","difficulty":"4.48","recommendation":"4.38","enrollment":"23","response rate":"91.30","QCourseOverall":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"0","4s":"1","5s":"10"},"QDifficulty":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"1","4s":"4","5s":"6"},"QWorkload":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"0","4s":"0","5s":"11"}},"instructor_scores":[{"number":"COMPSCI 161","cat_num":"4347","course_id":"1239","year":"2010","term":"2","id":"69e7709bfa572dad6549b62e71dde145","first":"Margo I.","last":"Seltzer","InstructorOverall":"4.62","EffectiveLecturesorPresentations":"4.67","AccessibleOutsideClass":"4.56","GeneratesEnthusiasm":"4.67","FacilitatesDiscussionEncouragesParticipation":"4.65","GivesUsefulFeedback":"4.75","ReturnsAssignmentsinTimelyFashion":"4.57"}]},"Spring '09":{"course_score":{"overall":"4.25","workload":"4.96","difficulty":"4.50","recommendation":"4.17","enrollment":"27","response rate":"88.89","QCourseOverall":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"0","4s":"1","5s":"10"},"QDifficulty":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"1","4s":"4","5s":"6"},"QWorkload":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"0","4s":"0","5s":"11"}},"instructor_scores":[{"number":"COMPSCI 161","cat_num":"4347","course_id":"1239","year":"2008","term":"2","id":"69e7709bfa572dad6549b62e71dde145","first":"Margo I.","last":"Seltzer","InstructorOverall":"4.62","EffectiveLecturesorPresentations":"4.62","AccessibleOutsideClass":"4.45","GeneratesEnthusiasm":"4.54","FacilitatesDiscussionEncouragesParticipation":"4.41","GivesUsefulFeedback":"4.50","ReturnsAssignmentsinTimelyFashion":"4.36"}]},"Spring '07":{"course_score":{"overall":"4.92","workload":"4.83","difficulty":"4.00","recommendation":"4.67","enrollment":"15","response rate":"80.00","QCourseOverall":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"0","4s":"1","5s":"10"},"QDifficulty":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"1","4s":"4","5s":"6"},"QWorkload":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"0","4s":"0","5s":"11"}},"instructor_scores":[{"number":"COMPSCI 161","cat_num":"4347","course_id":"1239","year":"2006","term":"2","id":"fe24f53c4533a88b259c87540adaf3bc","first":"Matt","last":"Welsh","InstructorOverall":"4.92","EffectiveLecturesorPresentations":"5.00","AccessibleOutsideClass":"4.75","GeneratesEnthusiasm":"5.00","FacilitatesDiscussionEncouragesParticipation":"5.00","GivesUsefulFeedback":"4.67","ReturnsAssignmentsinTimelyFashion":"3.00"}]}},"comments":{"Spring '09":{"comments":["It's great if you really want a super thorough understanding of operating systems. I would not take it just to have taken CS 161 (like a badge of honor) but rather if your courses line up well such that taking this class will be at least somewhat enjoyable rather than a lesson in frustration as you fail to complete every one of the problem sets.","Fantastic class.  Be warned that it's all you can do with your semester and even then it's tough.  Much more manageable without other work intensive classes because they'll likely end up taking a back seat to this.","Choosing a partner who you can split work with is very important -- otherwise, expect to burnt out by the end of the semester.","You seriously have to be willing to spend three to five days straight in the Terminal Room from mid-afternoon until you can't stay awake anymore (and I mean tired because the sun is rising, not tired because it's midnight and you woke up a bit early that morning). That said, you really understand the material at the end of the course in an extremely deep way.","Enthusiasm with reservations - know what you're in for. You will learn a lot about systems and operating systems, but you should be prepared to want to gouge your brain out with a keyboard.","It's a lot of work but definitely a life changing experience.","This is the best class I have ever taken at Harvard. That being said, it is the most time consuming - make sure all your other classes are really really easy! (Or you will fail all the others - 161 is so cool, you're bound to prioritize it)","Excellent course. Anyone who is willing to put in the time it requires and is comfortable with the subject matter should be able to take this course and reap its rewards.","It's a good class, but a very hard and time-consuming class. Remaining classes for the semester should be chosen wisely, or you will be living in the terminal room.","Until Matt Welsh teaches it again, do not take this class under any circumstances.","This course is great. It's extremely well taught and organized. However, as everyone knows going into it, cs161 is going to be a ton of work so i hesitate to 'recommend with enthusiasm' because i feel most people are not up to it. haha at times _i_ felt i wasn't up to it and i really enjoyed the course so anyone considering taking this should know what they're getting into. And honestly, they probably do and will take it no matter what the cue guide ratings say :)","Be ready to take only 3 courses.","Be prepare for the long working hours...","This course is nothing like you've ever experienced. It's the most rewarding class I've taken at Harvard.","Unbelievable class.  Terribly difficult, terribly amazing.  I doubt any class will be as much fun.","Beware! This is not a course on operating systems -- it is a course on thread synchronization. The virtual memory assignment is just a lethal synchronization problem in disguise. They didn't even give the pretense of making the file system assignment anything but a giant synchronization problem -- they implemented almost all of it but left the synchronization to us.","Hardest course ever. Also best course ever.","It's a lot of work, but worth it in the end.","if you like systems it is the most fun cs course you will take."]},"Spring '11":{"comments":["Change the 'how many hours did you spend per week' question to 'per day' and I might still answer > 14.  On the other hand, I got to experience HUHDS breakfasts a few times a week for the first time ever -- of course it was because I was still awake from the night before.  The course has amazing lectures, you'll learn a LOT.  But still, don't take it unless you're a very advanced CS person who is willing to focus your entire semester on this one course.","Great course, but definitely more work than the ~5.0 workload rating alone suggests.  The most important thing to note is that if you have a bad partner, don't be afraid to say something - your entire semester will be miserable if you have to pick up all the slack.","This class will destroy you semester. It will take away your social life, make you fail your other classes, and will cause your girlfriend to leave you. If you find time to sleep, you dreams will be in C, haunted by the race conditions in your code. Don't worry, the nightmares will be short; there is no time for sleep when working 100+ hours in a week. You will learn what it really means to be sleep deprived, staring at a computer screen for 32 hours without a break, skipping meals because you have no time to eat. I would tell you to start the assignments early, but by the time you're reading this, it's already too late.\r\n\r\nDon't be misled, this will be the best class you will ever take. Whether the costs are worth is up to you, I'm still not sure if they were for me.","This class takes time. You may have heard it's a lot of work. But seriously, you need to have a TON of time to devote to this class. It's really a rewarding class if you do, but it's also a nightmare if you don't.  If you want a challenge and have the time, go for it.  If you think you might be too busy, then you probably will be.","I feel unqualified to assess whether or not what I put into 161 was \"worth it.\"  But boy, what a ride.  I guess the question is, really, how could you not take 161?","In many ways, this is the course that I waited my entire academic career to take. I didn't think I had sufficient preparation in my sophomore year, and it's only given every other year. The experience of learning about operating systems and implementing the major parts of one is notoriously time consuming. However, it is also very rewarding. Many systems courses in CS can be described as looking behind the abstraction barriers that you've previously been taught never to cross, finding out how the underlying machinery works, and then implementing it yourself. What is different about CS161 is that the system in question is not just a minor component of a programmer's toolbox; the operating system is the whole shed. Everything you think you know about how computer systems work has a giant black box beneath it. In CS161 you will examine or implement all the major abstractions that an operating system provides to users and programmers to make practical computation possible. In my opinion, this is the only way to really understand the abstractions of threads, processes, virtual memory, system calls, and files that are every programmer's bread and butter.","For CS concentrators who care about low-level stuff: yes, go for it, get your hands dirty, learn something. For everybody else: stay away, this course consumes lives.","This class is your semester.  Then you take three more classes on top of it.  But it's awesome.  (Take easy classes along side it; otherwise you will die.)","Great class, but be ready for lots of work and make sure you are extremely competent as a programmer.","This course will consume your life. But it is also awesome.","There's a Stockholm Syndrome that comes with the course. When you're spending a few hundred hours during a semester on a class, you want to believe that it's worth it. Evaluate the syllabus carefully, and whether it's worth your semester. As for me, 161 was really the only class I did any work for this semester; I'm not excited for my grades, but I learned a bunch.","Arguably the hardest, but also most rewarding class in the department. Prepare to learn a lot, code a great deal, and spend endless nights debugging. But it's all worth it once you see your os running. Oh, and Margo is absolutely awesome.","This class is a must-take for anyone considering a job writing software. Margo and her staff do a great job. The assignments are incredibly well planned, thought-out, and supported by the course staff.","Best class ever.  Worst class ever.  Take your pick.","This is, hands-down, the most practical course I've taken at Harvard. There is quite a bit of theory, which is fun, but the challenging part of the course is in the design and engineering of the p-sets. This is what will keep you up nights (if you don't plan well) or consume a large portion of many of your days (if you do plan well). YOU NEED TO START P-SETS WHEN THEY ARE OUT unless you enjoy pulling 3 consecutive all-nighters, then still turning in a piece of crap that only kinda half-works. If you're given 3 weeks for a p-set, you need 3 weeks. I learned this the hard way, as did almost everyone in the course. \r\nWith that said, the course is definitely worth taking. Even if you're not really into operating systems, this course will help you figure out if you want to do software engineering at the lower level. Even if you're into higher-level scripting and OO languages, you still need to understand how the low-level stuff works, so take it!\r\nAlso, Margo is a spectacular professor, better than anyone I can think of in the CS department (and the CS department has some real champs). Her lectures are fun and interactive (and not in the usual \"can someone answer this factoid that any idiot can google and give me\" way) - truly intellectually stimulating. She herself is really approachable, funny, and no-nonsense (she will tell you exactly what's expected of you). Even if you don't take this, you have to take some class that she teaches.","Despite what the course catalogue may tell you, this class is not about Operating Systems. Sure, you kind of walk out of the class with a working OS, but that's not the point.\r\n\r\nAt the beginning of the term, you are given a staggering amount of God-Level code. It's (almost entirely) designed The Right Way (tm) with The Right Abstractions (tm). The style is impeccable. There are comments (glorious comments!) *everywhere.* Your job in this course is to not screw it up too badly. You get very loose assignments, which are great since you can make them anything from kind of difficult to oh-my-god-i-need-sleep-but-i-must-continue-typing hard. You can try out literally anything. More likely than not it won't work too well, but the only skill more valuable than designing perfect programs is debugging imperfect ones, so it all kind of works out in the end. The beauty of this course is that you are given the parts for a perfectly crafted, perfectly machined gun that happens to be missing a few pieces. You hack away with play-doh and legos and maybe, just maybe, you'll manage to blow off the foot you were pointing your Frankenstein-monster at.\r\n\r\nThat being said, that's all the class is. Lecture is... whatever. The professor? TFs? They're fine, but they're nothing special. This course is actually a course on designing things and coding them. If you go into this class thinking \"Let's do the bare minimum to get by,\" you're probably Doing It Wrong (tm). But even still, regardless about how much of your life force you pour into this course, you'll come out a much better programmer. Highly recommended. Would buy again.","Take this class. You need a working knowledge of operating systems, and despite the hours that will be spent hacking at your computer, the rewards are endless. You will learn to design, all the little tricks you can do in C, and how to work with a large codebase. Virtual memory is the best assignment.","For those with the minimal experience like me (50, 51, 61, 121), this class will be rough and extremely time consuming.  I felt others with more experience were able to grasp things more quickly, and oftentimes I was intimidated, but this really only enhanced my experience.\r\n\r\nHowever, it's totally worth it.  The psets take forever, but they are richly rewarding.  If you liked CS 61 and wanted a hardcore application of some of those key concepts, 161 is the class for you.","This class is actually as much work as everyone says it is.  That said, if you clear out your schedule, and have the necessary preparation for the course, you will learn a ton.","When I looked into the Q scores for CS161, I saw more numbers over 4.6 than I had for any other class's Q.  These numbers don't lie: CS161 is a very rewarding class with a heavy workload.  But the hours shouldn't scare you away: the class is very manageable given a decent, proactive work ethic.  \r\nComing into the class with only a few months of any programming knowledge behind me, not only was it still possible to succeed with hard work, but I found that my skills and intuition grew immensely as the course progressed.  Creating a toy operating system is a lot of fun and still requires serious creativity in design and care in implementation.  It may not be hacking the Linux kernel, but CS161 will nonetheless leave you -- especially if, like me, you have comparatively less background and no professional experience -- feeling like a more confident and knowledgeable programmer."]},"Spring '13":{"comments":["This may not be your hardest class in college, but it will certainly be your most time consuming. You need to be prepared to take this course in order to get the most out of it--that means knowing how to branch and checkout various versions of your code on git, navigate a massive 600 file+ code base with ease, step up and down the stack in gdb like a boss, and be comfortable reading lots of code to find an answer instead of asking (because no one else will know the answer\/is asleep or unreachable). If you are not already a seasoned developer, don\u00e2\u20ac\u2122t worry because by the end of assignment 2, you will be. But the more time you spend learning the tools, the less time you spend designing your OS, and trust me you can never spend enough time on design. If you are not prepared or are not ready for a very painful accelerated lesson in real software development, save yourself the trouble. Drop your ego and know why you are taking the class because if you take it for the wrong reasons, it will not be worth it whether you admit to it or not.\r\n\r\nYou have to complete 4 assignments. A1 is writing the synchronization primitives (lock, semaphore, and cv) that you will need for the rest of the course and the tests for them. Starting with A2 you get a partner and 3 weeks. Choose the smartest, most hard working, and DETERMINED partner you can find. 161 assignments take not just skill, but outright stubbornness to finish. You spend the first week writing a design doc. This is unlike any \u00e2\u20ac\u0153design doc\u00e2\u20ac\u009d you have ever done--it will take as much time as most CS psets, and even then you will realize that your design doc is a piece of sh*t and sometimes outright incorrect once you start the implementation. You will then inevitably spend the most of the last 2 weeks debugging your code. You will get countless 1 line bugs that cost hours, days, or even a week to find. Write your code slowly and make sure you really think through all the synchronization cases. A2 is implementing a bunch of system calls, processes\/threads, file descriptors, and a scheduler. A3 is implementing virtual memory with paging and swap space (this is the most difficult since even gdb depends on your memory system). A4 changes from year to year, but ours was to implement journaling for the existing file system.\r\n\r\nDespite all of this, this class is not about OS. At the beginning of the term, you are given a staggering amount of God-Level code. It's (almost entirely) designed The Right Way (tm) with The Right Abstractions (tm) by David Holland that will instill you with a new appreciation for C. The only skill more valuable than designing perfect programs is debugging imperfect ones. The beauty of this course is that you are given parts for a perfectly crafted, perfectly machined gun that happens to be missing a few pieces. You hack away with play-doh and legos and just maybe you'll manage to blow off the foot you were pointing your Frankenstein-monster at. I cannot understate the importance of diving right into the code full force without making dumb mistakes. Sounds difficult? It is. That being said, that's all the class is. Margo is brilliant and looks for the right things, but the lectures are completely unhelpful when it comes to your assignment. The gap between idea and implementation is just too large for a topic like OS. This course is actually a course on designing things and coding (ie debugging) them.\r\n\r\nThis class will not necessary destroy your semester, but it will certainly be your semester. It will take away your social life, make you do worse on your other classes, and will compete against your girlfriend for your attention... and it will win. But don't be misled--for most who choose this path, it will be the best class you will ever take.\r\n\r\nIt was the best class that I ever took. Even as a senior.","This course will consume a lot of your free time. I took it as one three classes, which helped, but I still had to put in a lot of late nights. Do the design docs well, and don't be afraid to rethink or start over large portions of your design. Find a good partner.\r\n\r\nThe TFs are super devoted and Margo is an incredible lecturer, and is super invested in her students. The teaching staff is the best I've had in a CS class here. The problem sets are super hard, but if you start right away, you can get them done in a sane fashion.","Don't take any other classes with homework if you're taking 161.","After this course, you can call yourself a programmer. Although you work very long hours on the assignment, you do get out of the course what you put into it.","If you like challenging yourself, learning a lot, and not sleeping ever, this class is for you.  Margo is amazing.  10\/10 would recommend.","It's as hard as everyone says it is.","As everyone knows, this course is difficult and time consuming. However, the TFs did not seem to care about the course. Sections were unhelpful, grades were not returned in a timely manner, and there was not a good support structure for the students who were not the best in the class.","Not too much to be said here - you know what you're getting yourself into.  If you have a partner on who you can thoroughly rely you will find your life significantly better.  Try to sign up with someone in mind (roommate works great) and set up a work flow early on.","The concepts themselves in the class are not that difficult. It's just that coding takes a bit of time. Think everything through very carefully, with pseudocode, before you start coding. There is enormous variability in the amount of time the assignment takes, and I think a lot of sunk time goes toward either (1) rewriting code that turns out to be incorrect or (2) fixing bugs that are extremely difficult to debug. Investing in pseudocode and design will pay off.","TAKE THIS CLASS. It's not even stockholm syndrome, honestly. You just legit learn tons and tons in the class both about how an OS works (which is important in CS, to know what's really gonna happen when you write a given line of code). Seriously though, 61 does a decent job of telling you the basics of what an OS does, and you can read about it online and whatever, but actually reading through the code that does these things and moreover writing code for the OS really helps you internalize what happens when you load in memory, etc. in a way that just reading about it can't, and also shows you how hard synchronization and other stuff can be (and makes you a lot better with synchro!).\r\n\r\nAlso it definitely teaches you a good amount about software engineering which is nice to know.\r\n\r\nYeah it'll be 20-30 hour weeks pretty often, but whatevs, it's worth it fo sho.","My blockmates definitely did not see as much of me on account of this course. Also the C programming language is a black hole of mischief. The problem sets are large, the code base is large, and you will encounter debugging challenges that you didn't believe were possible. That being said, this is the best class I have taken at Harvard. I really feel like this was a transformative learning experience and by being exposed to so much new material through the course I am a lot more passionate about Computer Science. Margo is so awesome and very approachable. If you take this class in the future I would highly recommend you pick the brains of the course staff they're out of this world brilliant.","This course has a reputation for a reason. If you are considering taking this course, here is what I think you should know (note that I wrote this early in assignment 3, which is the most difficult pset, but I was still relatively well rested):\r\n\r\n\r\nWARNINGS\r\n> My partner and I regularly spend 30+ hours on this course in a week (less on assignments 0 and 1, which were individual anyway). We are competent sophomores (we think so at least) who took CS61. My partner did AP CS in high school, while my first CS experience was in CS50 freshman fall. There might be people who spend less time on the psets, but my sense is that the overwhelming majority of students would agree that this course is a huge commitment in terms of time required.\r\n\r\n> I would imagine that this course will be very painful if you don't like your partner. Try to know your partner well before taking this class. There are people every year who do just fine finding a partner in the class, but it will probably help if you know your partner's work patterns and quirks beforehand.\r\n\r\n\r\nENCOURAGEMENT\r\n> The course staff consists entirely of people whom I consider to be gods\/goddesses among us mere mortals. Margo is clear and concise, powering through complex concepts and making them seem oh so simple (she's also very friendly :). Daniel Margo and David Holland both consistently amaze me with the breadth and depth of their knowledge, and I have never come away from a conversation with either of them without feeling like I have gained significant insights in whatever it was we were talking about. The undergraduate course staff is likely to change since the undergrad staff consists entirely of seniors, but Rob Bowden, Carl Jackson, and Max Wang are three of the most intelligent and dedicated TFs I have ever had the pleasure - nay, the honor - of meeting and talking to. All three of them are fantastically knowledgeable and dedicated to the point that I don't know when they get the time to do their own work because they always seem to be helping us with ours. I expect that, even though the undergrad staff will change, future iterations of undergrad staff will uphold similar standards.\r\n\r\n> CS161 has taught me more in one semester than all of my previous CS courses combined (all 4 of them). Granted, this is partially true because much of the knowledge gained in other courses is necessary to understand operating systems.\r\n\r\n\r\nCONCLUDING THOUGHTS\r\nPersonally, while I am DEFINITELY glad I am gaining knowledge of what really lies beneath the abstraction barrier, I definitely prefer coding above it. This is not to say that I regret taking this course. On the contrary, I am very glad I am taking it for the reasons outlined above. To those still considering taking this class, here is my final thought: if you are willing to devote massive amounts of time to the course (and potentially lose massive amounts of sleep near the due dates of assignments 2-4), this course will in no way let you down.","This is the best course offered at Harvard. The lectures are extremely well taught, clear, and most importantly fascinating. They will give you a perspective not only about how things work, but why they evolved to be as they are. The problem sets will force you to manage your time well. This is also the hardest course at Harvard. Be prepared to spend 30-40 hours a week, in which you are so sleep deprived your short-term memory fails you and you have to write down what you are currently doing or you'll forget it (like in memento). By the end, however, you will have written your own functioning operating system, and you will feel awesome. There is no other course in which the professor (Margo) cares so much about the students and their welfare. This course will make you a better software engineer, computer scientist and debugger, as well as a better person. You will learn to truly value your time and your friends. Don't be scared. Take the course. It's worth it.","Don't take it if the flipped classroom thing is still a thing.  It felt forced at times.","I can't stress enough how awesome CS161 is. Margo is indisputably the best professor I've had at Harvard. She clearly cares a ton about her students; throughout the entire semester she treated us with an amazing amount of respect and spent an inordinate amount of time trying to make 161 the best experience possible for everyone. The course staff were all absolutely top-notch: they were very responsive, and had a deep understanding of the challenges we were facing on the assignments and the many possible ways to deal with them. They also worked incredibly hard to read and critique the massive amounts of code we dumped on them. The distribution code was, as one person put it, \"god-level\", and the assignments made me a vastly better programmer. But I think what distinguished the course the most was the ability of everyone involved to have lots of fun, even while working our collective butts off on writing\/solving\/grading very difficult assignments. Truly one of my favorite experiences.","This is *the* CS class at Harvard. I regularly slept 4 hours or less a day for weeks on end doing psets. It's a constant uphill battle against exhaustation, failing all your other classes, and figuring out where that race condition is in your code. It will *hurt* taking this class. You'll become intimately acquainted with the sight of daybreak and the sounds of birds chirping over the slow hum of your computer. You'll get to know your fellow 161'ers *very* well as you all sweat over your code at 5am for the 3rd day in a row, and you'll probably put on more than a few pounds since you'll be making lots of late night food runs.\r\n\r\nBUT, This is so worth it. Even if you don't care much about Operating Systems, you will grow so much as a coder during the course of this class. This is by far, the greatest CS experience I've had yet.","Fellow CS concentrators, I know what your concerns are. \r\n\r\nIn your mind, you're running through whether or not it's worth it to take this class. In your mind, you're afraid of the horror stories of assignments that take upwards of forty hours to complete. In your mind, you're running through all the extracurriculars you'll have to give up, all the hours of sleep you'll lose, all the friends who will never see you, and the harrowing image of the sun's rays greeting your glazing eyes as it rises over the horizon, just outside the window where your laptop sits, dots appearing on the screen as p \/testbin\/ctest inches across your terminal. Your kernel suddenly panics. An alien life form detects a spike of despair on Earth as your frustration sends our rippling waves of negative energy across the universe. \r\n\r\nYou look to the left at your partner, and utter a single word. Your mother would disapprove.\r\n\r\nMost importantly, and perhaps this is the greatest barrier, in your mind, you're asking yourself: \"How are operating systems even relevant? That's so like, 1990s and Bill Gates and Steve Jobs or something.\"\r\n\r\nFirst, the horror stories are overhyped.  The staff are incredible and you are given weeks to do assignments. They periodically check up on you and express concerns to keep you on track. Most importantly, they treat you like people, so, despite hardship, everything feels very rewarding. Margo is fantastic -- literally is the best person ever. Everyone loves her. Forrealz.\r\n\r\nTeaching in the classroom is innovative. The staff constantly experiment with new techniques, and, when things don't go smoothly, admit their mistakes and make corrections for the benefit of students. They selectively do things like flipping the classroom, not because it's a gimmicky fad that everyone is buying into now, but because, at certain points in the class, it really is beneficial to have you discover concepts from first principles.\r\n\r\nLearning how to work on an operating system will challenge you and take your programming abilities to the next level. Even if you don't believe why operating systems are relevant, the design paradigms and security practices you encounter here will make you a better software engineer and better team player. I thought I was a programmer before I took this class, and now that I have, I knew I wasn't before. \r\n\r\nMostly importantly, there is pizza or mexican food at all night office hours the day before the assignment is due.\r\n\r\nSo, at this point, you might be still be doubtful of whether you're going to take it. You may think that it is a Bad Idea (TM). Succumb to the draw. Go with your gut. You absolutely have to take this course. I shopped the class, walking in 100% confident that I wouldn't take it. Yet, sitting there, at the first lecture, I suddenly changed my mind, and I'm glad I did. It was worth every kernel panic, every failed KASSERT, every single deadlock.","This class lives up to its reputation of being very difficult yet very rewarding. I learned a lot more about systems than I would've thought possible in one semester. I am definitely a better programmer now than I was a couple months ago. With that said, this class did consume my semester. I fell behind in all my other classes, even the easy ones. I also did not get much sleep. If you're thinking about taking 161, keep in mind that it requires a huge time commitment and will probably be the hardest class you'll take at Harvard.","I came into the class not believing that the craziness I've heard could possibly be true --- it is! However it doesn't stop this class from being one of the best CS classes I've taken --- it's so well supported and you don't feel too lost and a good partner will really help you solve problems together. The debugging process is painful though; especially when you have a deadline and no one but yourself understands the complete set of code you've written. For me it's a lot less about systems but more about design choices, understanding new code base, and working effectively with a partner. I learnt a ton from the course and again, the staff are amazing.","This course is hard. You see that 5 for time? It's because there wasn't a 10. However, this course is worthwhile. The material you learn here will be useful in the future, you'll know how an operating system really works. The theory is straightforward; the coding is really the challenging part, but you get a lot of coding done and get a better handle of C (especially pointer!). Debugging will become second nature. \r\n\r\nThe course is very well run; the staff tries to make it as easy as possible. The student TFs are pretty helpful; but I didn't feel as though the other research TFs were as understand of undergraduate schedules. Carl, Max, and Rob were fantastic and David Holland knows a lot, so make good use of your resources if you start to struggle.","This course is hard, but probably one of the single best courses you can take at harvard. Clear your schedule.","This is among the top 3 classes I've taken at Harvard. It's also one of the hardest. Don't let that deter you! The course staff are incredible, and their enthusiasm for the material is really great. You will learn a lot of core systems stuff and write a lot of code for a semi-realistic code base. Even if you don't ever plan to work on operating systems again in the future (watch out though, the class might change your mind), you will be a better programmer after taking this course, and you'll have a better appreciation for how these low level concerns can affect your work higher up on the stack. My advice is to try to start early on the assignments, but be willing to put in a lot of hours during crunch time at the end.","This is probably the best class and most rewarding class in the computer science department! Margo is awesome, and the TFs were excellent, very knowledgeable, and gave us awesome feedback! You learn so much about good system design, how to design good interfaces and APIs, how to program in a highly concurrent system (through painful debugging sessions), while having the operating system demystified. The assignments are definitely the highlight of the class. You'll spend ~40 hours or more a week on assignments, definitely plan ahead and take easy classes when taking this class! Also, make sure to get a good partner! Highly recommend this class, but it is definitely not for the weak willed.","Amazing class. This class is one of the few at Harvard that teaches you actual software engineering skills. You will walk away with an entirely new understanding of how operating systems and computers work. You will have much stronger debugging skills and really improve your coding chops. You will learn how to code with a partner and write clean, understandable, and testable code. It's a lot of work but definitely worth it.","I am no longer scared of anything in computers. Linux is no a longer magic black box that does things that I want in the way it wants. I can tell you how your code needs to be different if it goes on a pacemaker, or a probe to Mercury, or a high-end gaming platform, and given the time, I could probably write for you an OS for each use-case. You, too can have this power. All it takes is thirty hours of your time every week (disbelieve me at your own peril; ninety hours in the last week of an assignment may be in your future, too), an obsessive dedication to synchronization correctness, and the willingness to take your design assignments seriously *before* you start coding. If you're willing to dedicate the time, effort, and sleepless nights, though, this course will teach you to think like a kernel hacker, and more than that, a good one. Margo Seltzer thinks very hard about teaching, and does a uniformly fantastic job. You're given more than enough rope to hang yourself on assignments, but if you get out alive, it's a glorious ride. Easily the best course I've taken.","This is one of the most exceptional classes I've taken at Harvard. The teaching staff are devoted, the lectures are solid, and the assignments are both interesting and polished from many years of careful iteration. You will learn a tremendous amount about the guts of operating systems; the techniques and abstractions and hacks that keep processes and memory and files chugging along. Your debugging and system design skills easily go up a notch too.\r\n\r\nThe most amazing thing about this class though is the community that ends up building around it! Margo's flipped classroom and this year's extra-friendly staff make the class much more of a team than a collection of students taking notes. Where else are you going to be able to role play as PMs and Engineers on a rocket-control-system design meeting? Where else are you going to be able to argue and slowly go crazy with 3 other people about VM testing at 5 am over pizza and sprite? Where else do you get ANIMAL MASCOTS?\r\n\r\nIt is a lot of work, but just don't take too many other killer classes the semester and it's doable.","This is a fun class.  It is very time-consuming, and it really teaches you how to go about large programming projects.  You will experience the satisfaction of having completed most of the core pieces of an OS kernel in one semester.","Everything you hear is true.","161 was my entire semester. This class took the time of 4 full classes. I did work for my other 3 classes during the time that I normally would have slept, or neglected to do it at all. It's a life consumer but in my opinion, definitely worth it. My ability as a programmer has doubled. Also the teaching staff was absolutely incredible. Margo is the best professor in the CS department and the TFs were outstanding. If you liked 61 then I'd 100% recommend you take this class. If you didn't like 61, but might still be interested in this class, then shop it and read through the old assignments to see if you'd be down.","You'd have to be insane to take this course.\r\n\r\nYou'd have to be even more insane not to take this course.","If you liked CS61, you should definitely take this class! Just don't take anything else difficult along with it, and make sure you block out lots of hours for just the psets.","Clear your schedule.  I turned in good work, but I had some weeks where I spent in excess of 50 hours on a problem set.  Address this by thinking very carefully in the design phase - list out all requirements, propose solutions, reason through everything, then do it again - a few times.  Do not start coding until you and your partner can walk through your solutions without raising any serious questions about the design."]},"Spring '14":{"comments":["Where else could you find a course where staff responds to your questions 3am on Piazza in 2 minutes?","This is perhaps the best computer science class at Harvard. The assignments are challenging but really fun - you get to design your own operating system and really get to know your machine.","If you're not a hardcore software dev already, you will be after taking this course. It's tons of work (30-40 hours\/week on average, peak of ~60 hours\/week), but well worth it.","Make sure you don't take any other classes at the same time as 161.  If you do, know you won't do any work for them.  Keep in mind that this is 90% because 161 is amazing and you wont want to spend time doing anything else, but also that it is 10% because you will literally have negative 5 hours a day to do anything else.","I'm too tired to write a detailed review of this class, but I agree with pretty much everything that was said in last year's Q guide.","If you are interested in systems then TAKE THIS CLASS. The time you put in will be totally worthwhile, though it is a lot of time. I only took two other classes while in 161, which was really helpful, so do that if you can. The learning to hours ratio of CS161 is great despite the number of hours you put in -- you learn a ton about operating systems and about how to be an effective software designer\/engineer in general. Margo (she is inspiring!) and the course staff were all INCREDIBLE; they were very generous with their time and knowledge and made it really easy to ask questions. I was very nervous when I started the class, but knowing that I had such a strong support structure eased my nerves in a big way. Partners are really important, so it's great if you take the class with someone you know you want to work with. Finally, don't think that you have to be a 'crazy CS genius' to take 161 -- there isn't a lot of prior knowledge that's needed and the course staff is there to help you every step of the way.","BEST CLASS AT HARVARD! While this class does rightfully have the reputation of killing your semester, it is a must take for any computer science concentrator who is even remotely interested in systems. Margo, David Holland, and Dan Margo make an incredible teaching staff. They are so accessible and just flat-out fun to hang around. It is definitely the closest I have gotten to a teaching staff. The bulk of this class comes in 3 assignments. While the first assignment is by far the easiest, it has its challenges in maneuvering the seemingly foreign source code for the OS and also in getting used to working with your partner. The second and third assignments will consume your life. But you will be a better person for it. You are never left to rot by the teaching staff. They are accessible to answer questions at literally every hour of the day leading up to the problem set deadlines and even extending past them (when you take your late days).\r\n\r\ntl;dr If you are interested in learning WAY more details about many ideas introduced in CS61, you will not regret taking this class. You will walk away having a completely changed perspective on computers. But, this is very time consuming so make sure to balance your schedule.","You know what this class is. I highly encourage all CS students to take this before graduating. Set aside a spring semester in which you can take three easy-ish classes alongside this one and buckle down.","This is probably the most time consuming class I will take at Harvard. If you liked 61, I would definitely recommend taking this class. You grow so much as a programmer throughout the course. You'll also become very close to everyone in the class as a result of struggling over the assignments together. Margo also books a room in MD the day before assignments are due from 8pm to 8am so everyone can work together. This class is *a lot* of work, but definitely worth it! Any coding project from now on won't seem quite as intimidating after building an entire OS!","If you enjoyed CS61 and think that was enough--that this will be too hard\/painful--that isn't a reason to not take this class. You will come out a real programmer after taking this class. And you will feel like a systems boss. \r\n\r\nBesides, the course staff is amazing. They are there to help you every step of the way. They WILL fix all your bugs because they have seen almost all of them. I think I learned the most about coding during my time at Harvard (as you would on a CS internship) from this class. Prof. Seltzer is AMAZING at teaching. She is so good at explaining things that you will go to her expecting to spend 30 mins in her office, but you will be out in 5. I am seriously impressed by how she makes all topics really interesting. The course staff really respects the students' time and tries to make sure that nothing they teach will be a waste of your time in terms of the assignment or life as a CS person.\r\n\r\nAnd if you're wondering whether sleeping and eating three meals a day are possible while taking CS161, I want to tell you that it is (I even had some time to be social--what??). Even if you started with CS50. Even if you don't think you are an expert programmer. Even if you, like me, didn't think you could handle the workload. Just don't take another heavy-workload class with it (and by that I mean any class that has a workload of >10 hrs a week).\r\n\r\nThis class is so applicable. Even the papers you read are applicable to things you will do whether you plan on working or researching. The \"lectures\" are super-interesting.\r\n\r\nLast, but certainly not the least, choose your partner wisely. They should have as much time\/motivation as you do to meet\/devote to the class. If not, make sure you work well with them at least.\r\n\r\nOh and read all the code and make sure you know how it all fits together before\/while you write your own code (this is especially true for the final file systems assignment). Do NOT jump into coding without understanding how all the pieces work together to give you a functional file system."]}},"mostRecentQ":{"overall":"4.90","workload":"5.00","difficulty":"4.50","recommendation":"4.90","enrollment":"15","response rate":"73.33","QCourseOverall":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"0","4s":"1","5s":"10"},"QDifficulty":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"1","4s":"4","5s":"6"},"QWorkload":{"number":"COMPSCI 161","course_id":"1239","cat_num":"4347","1s":"0","2s":"0","3s":"0","4s":"0","5s":"11"}},"success":true}